{"remainingRequest":"/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/src/components/userdashboard/editform/editaccount.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/src/components/userdashboard/editform/editaccount.vue","mtime":1541835170092},{"path":"/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/node_modules/cache-loader/dist/cjs.js","mtime":1541837368340},{"path":"/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\ninput.invalid{\n  border: 1px solid red !important;\n}\n.errormsg {\n  color: red\n}\n",{"version":3,"sources":["editaccount.vue"],"names":[],"mappingsiqBA;AACA;AACA;AACA;AACA;AACA","file":"editaccount.vue","sourceRoot":"src/components/userdashboard/editform","sourcesContent":["<template>\n<div>\n<div id=\"form2\">\n    <div class=\"mar0_15\">\n      <span class=\"fonweigh700\" style=\"float:right;\"><a><i class=\"fas fa-times\"></i></a></span>\n      <h4 class=\"fonweigh700\">Edit Account Details</h4>\n      <hr style=\"border-color:#EEEEEE;\">\n    </div>\n<div class=\"mainfomlayout\">\n    <div class=\"row\" style=\"margin-top:10px;font-family: 'Roboto', sans-serif;\">\n      <form @submit.prevent=\"sendData\">\n        <div class=\"hrafom1\">\n        <h4 style=\"margin: 0px 15px 20px;\">Landlord account details:</h4>\n        <div class=\"row marzero0\">\n            <div class=\"col-sm-6\">\n                <div class=\"form-group custrespformgrop\">\n                        <label class=\"lblcustm\" >Landlord name</label>\n                        <p>\n                          <input data-vv-validate-on=\"blur\" name=\"Landlord name\" v-model.trim=\"property.Landlord_name\" v-validate=\"{ required:true , regex:/^[A-z\\s\\-\\/]+$/ }\" type=\"text\" class=\"form-control step_2\" :class=\"{'invalid': errors.has('Landlord name')}\">\n                          <span class=\"errormsg\" v-show=\"errors.has('Landlord name')\">{{ errors.first('Landlord name') }}</span>\n                        </p>\n                </div>\n            </div>\n            <div class=\"col-sm-6\">\n                <div class=\"form-group custrespformgrop\">\n                        <label class=\"lblcustm\" >Account holder name</label>\n                        <p>\n                          <input data-vv-validate-on=\"blur\" name=\"Account holder name\" v-model.trim=\"property.Account_holder_name\" v-validate=\"{ required:true , regex:/^[A-z\\s]+$/ }\" type=\"text\" class=\"form-control step_2\" :class=\"{'invalid': errors.has('Account holder name')}\">\n                          <span class=\"errormsg\" v-show=\"errors.has('Account holder name')\">{{ errors.first('Account holder name') }}</span>\n                        </p>\n                    </div>\n            </div>\n        </div>\n        <div class=\"row marzero0\">\n            <div class=\"col-sm-6\">\n                <div class=\"form-group custrespformgrop\">\n                        <label class=\"lblcustm\" >Bank name</label>\n                        <select name=\"Bank name\" class=\"form-control step_2\" id=\"sel1\" v-model.trim=\"property.Bank_name\" :class=\"{'invalid': errors.has('Bank name')}\" required>\n                          <option>Allahabad Bank</option>\n                          <option>Andhra Bank</option>\n                          <option>Axis Bank</option>\n                          <option>Bank of Baroda</option>\n                          <option>Bank of India</option>\n                          <option>Bank of Maharashtra</option>\n                          <option>Bank of Punjab</option>\n                          <option>Bank of Rajasthan</option>\n                          <option>BNP Paribas</option>\n                          <option>Canara Bank\"</option>\n                          <option>Central Bank of India</option>\n                          <option>Centurion Ban</option>\n                          <option>Corporation Bank</option>\n                          <option>Citi Bank</option>\n                          <option>City Union Bank</option>\n                          <option>Catholic Syrian Bank</option>\n                          <option>DCB Bank</option>\n                          <option>Development Credit Bank</option>\n                          <option>Deutsche Bank AG</option>\n                          <option>Dhanlakshmi Bank</option>\n                          <option>Dena Bank</option>\n                          <option>Federal Bank</option>\n                          <option>HDFC Bank</option>\n                          <option>HSBC Bank</option>\n                          <option>ICICI Bank</option>\n                          <option>IDBI Bank</option>\n                          <option>Indian Bank</option>\n                          <option>Indian Overseas Bank</option>\n                          <option>IndusInd Bank</option>\n                          <option>ING Vysya Bank</option>\n                          <option>Jammu &amp; Kashmir Bank</option>\n                          <option>Karnataka Bank</option>\n                          <option>Kotak Mahindra Bank</option>\n                          <option>Karur Vysya Bank</option>\n                          <option>Lakshmi Vilas Bank</option>\n                          <option>NKGSB Co-operative Bank Ltd</option>\n                          <option>Oriental Bank of Commerce</option>\n                          <option>PunjabSind Bank</option>\n                          <option>Punjab National Bank</option>\n                          <option>Standard Chartered Bank</option>\n                          <option>State Bank of India</option>\n                          <option>State Bank of Indore</option>\n                          <option>State Bank of Mysore</option>\n                          <option>State Bank of Patiala</option>\n                          <option>State Bank of Travancore</option>\n                          <option>State Bank of Bikaner and Jaipur</option>\n                          <option>State Bank of Hyderabad</option>\n                          <option>State Bank of Saurashtra</option>\n                          <option>South Indian Bank</option>\n                          <option>Syndicate Bank</option>\n                          <option>UCO Bank</option>\n                          <option>UTI Bank</option>\n                          <option>Union Bank of India</option>\n                          <option>United Bank of India</option>\n                          <option>United Western Bank</option>\n                          <option>Vijaya Bank</option>\n                          <option>Yes Bank</option>\n                        </select>\n                </div>\n            </div>\n            <div class=\"col-sm-6\">\n                <div class=\"form-group custrespformgrop\">\n                        <label class=\"lblcustm\" >IFSC </label>\n                        <p>\n                          <input data-vv-validate-on=\"blur\" name=\"IFSC\" v-model.trim=\"property.IFSC\" v-validate=\"'required|matchIFSC'\" type=\"text\" class=\"form-control step_2\" :class=\"{'invalid':errors.has('IFSC')}\">\n                          <span class=\"errormsg\" v-show=\"errors.has('IFSC')\">{{ errors.first('IFSC') }}</span>\n                        </p>\n                    </div>\n            </div>\n        </div>\n        <div class=\"row marzero0\">\n            <div class=\"col-sm-6\">\n                <div class=\"form-group custrespformgrop\">\n                        <label class=\"lblcustm\" >Account number</label>\n                        <p>\n                          <input data-vv-validate-on=\"blur\" name=\"Account number\" v-model.trim=\"property.Account_number\" v-validate=\"'required|numeric|matchaccno|matchaccdig'\" type=\"text\" class=\"form-control step_2\" :class=\"{'invalid': errors.has('Account number')}\">\n                          <span class=\"errormsg\" v-show=\"errors.has('Account number')\">{{ errors.first('Account number') }}</span>\n                        </p>\n                </div>\n            </div>\n            <div class=\"col-sm-6\">\n                <div class=\"form-group custrespformgrop\">\n                        <label class=\"lblcustm\" >Retype account number</label>\n                        <p>\n                          <input data-vv-validate-on=\"blur\" v-model.trim=\"property.retype_Account_number\" name=\"Retypeaccountnumber\" v-validate=\"{ required:true , is: property.Account_number }\" type=\"text\" class=\"form-control step_2\" :class=\"{'invalid': errors.has('Retypeaccountnumber')}\">\n                          <span class=\"errormsg\" v-show=\"errors.has('Retypeaccountnumber')\">{{ errors.first('Retypeaccountnumber') }}</span>\n                        </p>\n                    </div>\n            </div>\n        </div>\n        <div class=\"row marzero0\">\n            <div class=\"col-sm-6\">\n                <div class=\"form-group custrespformgrop\">\n                        <label class=\"lblcustm\" >Landlord city</label>\n                        <p>\n                          <input data-vv-validate-on=\"blur\" name=\"Landlord city\" v-model.trim=\"property.Landlord_city\" v-validate=\"{ required:true , regex:/^[A-z0-9\\s\\-\\/]+$/ }\" type=\"text\" class=\"form-control step_2\" :class=\"{'invalid': errors.has('Landlord city')}\">\n                          <span class=\"errormsg\" v-show=\"errors.has('Landlord city')\">{{ errors.first('Landlord city') }}</span>\n                        </p>\n                </div>\n            </div>\n            <div class=\"col-sm-6\">\n                <div class=\"form-group custrespformgrop\">\n                        <label class=\"lblcustm\" >Landlord state</label>\n                        <p>\n                          <input data-vv-validate-on=\"blur\" name=\"Landlord state\" v-model.trim=\"property.Landlord_state\"\n                          v-validate=\"{ required:true , regex:/^[A-z0-9\\s\\-\\/]+$/ }\" type=\"text\" class=\"form-control step_2\" :class=\"{'invalid': errors.has('Landlord state')}\">\n                          <span class=\"errormsg\" v-show=\"errors.has('Landlord state')\">{{ errors.first('Landlord state') }}</span>\n                        </p>\n                    </div>\n            </div>\n        </div>\n        <div class=\"row marzero0\">\n            <div class=\"col-sm-6\">\n                <div class=\"form-group custrespformgrop\">\n                        <label class=\"lblcustm\" >Landlord PAN number</label>\n                        <p>\n                          <input data-vv-validate-on=\"blur\" name=\"Landlord PAN number\" v-model.trim=\"property.Landlord_PAN_number\" v-validate=\"{ regex:/[A-Z]{5}[0-9]{4}[A-Z]{1}/ }\" type=\"text\" class=\"form-control step_2\" :class=\"{'invalid': errors.has('Landlord PAN number')}\">\n                          <span class=\"errormsg\" v-show=\"errors.has('Landlord PAN number')\">{{ errors.first('Landlord PAN number') }}</span>\n                        </p>\n                </div>\n            </div>\n        </div>\n        <div class=\"row marzero0\">\n            <div class=\"col-sm-6\">\n                <div class=\"form-group custrespformgrop\">\n                        <label class=\"lblcustm\" >Upload landlord PAN</label>\n                        <div class=\"file-drop-area\">\n                            <!-- <span class=\"fake-btn\">Choose files</span> -->\n                            <span class=\"file-msg js-set-number\" style=\"color:#808080;font-size:16px\">Click or Drop files <span style=\"color:#0071bc;\">here</span></span>\n                            <input class=\"file-input\" type=\"file\" name=\"property.pan_doc_name\" v-on:change=\"onFileChange\" >\n\n                        </div>\n                        <div v-show=\"imageUpload===1\"> <small><p>File Uploaded </p></small> </div>\n                        <div class=\"errormsg\" v-show=\"filevalid==false\"><b>File uploaded has exceeded size limit </b></div>\n                        <div class=\"errormsg\" v-show=\"filevalid_format==false\"><b>File uploaded is not of the format jpg/png/pdf/jpeg</b></div>\n                        <small>jpg/png/pdf files with a size less than 500kb</small>\n                </div>\n            </div>\n        </div>\n        <div class=\"row marzero0\">\n            <label class=\"lblcustm\" style=\"margin:0px 15px;\" >Maintenance Account Details:</label>\n            <div class=\"col-sm-12\">\n                <div class=\"form-group custrespformgrop\">\n                        <label class=\"lblcustm\" >Same as landlord account details?</label>\n                        <input type=\"radio\" id=\"option1\" name=\"fooBar\" v-model=\"property.M_same\" value=\"1\" v-on:change=\"submit3\">\n                        <label class=\"radiolabel\" for=\"option1\"><span><span></span></span>Yes</label>\n\n                        <input type=\"radio\" id=\"option2\" name=\"fooBar\" v-model=\"property.M_same\" value=\"0\" v-on:change=\"submit4\">\n                        <label class=\"radiolabel\" for=\"option2\"><span><span></span></span>No</label>\n                </div>\n            </div>\n        </div>\n        <div v-show=\"M_same_l==0\">\n              <div class=\"col-sm-6\">\n                  <div class=\"form-group custrespformgrop\">\n                          <label class=\"lblcustm\" >Account holder name</label>\n                          <p>\n                            <input data-vv-validate-on=\"blur\" name=\"M_Account holder name\" v-model.trim=\"property.M_Account_holder_name\" v-validate=\"{ required:true , regex:/^[A-z\\s]+$/ }\" type=\"text\" class=\"form-control step_4\" :class=\"{'invalid': errors.has('M_Account holder name')}\">\n                            <span class=\"errormsg\" v-show=\"errors.has('M_Account holder name')\">{{ errors.first('M_Account holder name') }}</span>\n                          </p>\n                      </div>\n              </div>\n          <div class=\"row marzero0\">\n              <div class=\"col-sm-6\">\n                  <div class=\"form-group custrespformgrop\">\n                          <label class=\"lblcustm\" >Bank name</label>\n                          <select name=\"M_Bank name\" class=\"form-control step_4\" id=\"sel1\" v-model.trim=\"property.M_Bank_name\" :class=\"{'invalid': errors.has('M_Bank name')}\">\n                            <option>Allahabad Bank</option>\n                            <option>Andhra Bank</option>\n                            <option>Axis Bank</option>\n                            <option>Bank of Baroda</option>\n                            <option>Bank of India</option>\n                            <option>Bank of Maharashtra</option>\n                            <option>Bank of Punjab</option>\n                            <option>Bank of Rajasthan</option>\n                            <option>BNP Paribas</option>\n                            <option>Canara Bank\"</option>\n                            <option>Central Bank of India</option>\n                            <option>Centurion Ban</option>\n                            <option>Corporation Bank</option>\n                            <option>Citi Bank</option>\n                            <option>City Union Bank</option>\n                            <option>Catholic Syrian Bank</option>\n                            <option>DCB Bank</option>\n                            <option>Development Credit Bank</option>\n                            <option>Deutsche Bank AG</option>\n                            <option>Dhanlakshmi Bank</option>\n                            <option>Dena Bank</option>\n                            <option>Federal Bank</option>\n                            <option>HDFC Bank</option>\n                            <option>HSBC Bank</option>\n                            <option>ICICI Bank</option>\n                            <option>IDBI Bank</option>\n                            <option>Indian Bank</option>\n                            <option>Indian Overseas Bank</option>\n                            <option>IndusInd Bank</option>\n                            <option>ING Vysya Bank</option>\n                            <option>Jammu &amp; Kashmir Bank</option>\n                            <option>Karnataka Bank</option>\n                            <option>Kotak Mahindra Bank</option>\n                            <option>Karur Vysya Bank</option>\n                            <option>Lakshmi Vilas Bank</option>\n                            <option>NKGSB Co-operative Bank Ltd</option>\n                            <option>Oriental Bank of Commerce</option>\n                            <option>PunjabSind Bank</option>\n                            <option>Punjab National Bank</option>\n                            <option>Standard Chartered Bank</option>\n                            <option>State Bank of India</option>\n                            <option>State Bank of Indore</option>\n                            <option>State Bank of Mysore</option>\n                            <option>State Bank of Patiala</option>\n                            <option>State Bank of Travancore</option>\n                            <option>State Bank of Bikaner and Jaipur</option>\n                            <option>State Bank of Hyderabad</option>\n                            <option>State Bank of Saurashtra</option>\n                            <option>South Indian Bank</option>\n                            <option>Syndicate Bank</option>\n                            <option>UCO Bank</option>\n                            <option>UTI Bank</option>\n                            <option>Union Bank of India</option>\n                            <option>United Bank of India</option>\n                            <option>United Western Bank</option>\n                            <option>Vijaya Bank</option>\n                            <option>Yes Bank</option>\n                          </select>\n                  </div>\n              </div>\n              <div class=\"col-sm-6\">\n                  <div class=\"form-group custrespformgrop\">\n                          <label class=\"lblcustm\" >IFSC </label>\n                          <p>\n                            <input data-vv-validate-on=\"blur\" name=\"M_IFSC\" v-model.trim=\"property.M_IFSC\" v-validate=\"'required|M_matchIFSC'\" type=\"text\" class=\"form-control step_4\" :class=\"{'invalid':errors.has('M_IFSC')}\">\n                            <span class=\"errormsg\" v-show=\"errors.has('M_IFSC')\">{{ errors.first('M_IFSC') }}</span>\n                          </p>\n                      </div>\n              </div>\n          </div>\n          <div class=\"row marzero0\">\n              <div class=\"col-sm-6\">\n                  <div class=\"form-group custrespformgrop\">\n                          <label class=\"lblcustm\" >Account number</label>\n                          <p>\n                            <input data-vv-validate-on=\"blur\" name=\"M_Account number\" v-model.trim=\"property.M_Account_number\" v-validate=\"'required|numeric|M_matchaccno|M_matchaccdig'\" type=\"text\" class=\"form-control step_4\" :class=\"{'invalid': errors.has('M_Account number')}\">\n                            <span class=\"errormsg\" v-show=\"errors.has('M_Account number')\">{{ errors.first('M_Account number') }}</span>\n                          </p>\n                  </div>\n              </div>\n              <div class=\"col-sm-6\">\n                  <div class=\"form-group custrespformgrop\">\n                          <label class=\"lblcustm\" >Retype account number</label>\n                          <p>\n                            <input data-vv-validate-on=\"blur\" v-model.trim=\"property.M_retype_Account_number\" name=\"M_Retypeaccountnumber\" v-validate=\"{ required:true , is: property.M_Account_number }\" type=\"text\" class=\"form-control step_4\" :class=\"{'invalid': errors.has('M_Retypeaccountnumber')}\">\n                            <span class=\"errormsg\" v-show=\"errors.has('M_Retypeaccountnumber')\">{{ errors.first('M_Retypeaccountnumber') }}</span>\n                          </p>\n                      </div>\n              </div>\n          </div>\n\n        </div>\n        <div class=\"row marzero0\" style=\"margin-bottom:20px;\">\n            <div class=\"maxbtnwid pull-right\">\n            <div class=\"col-xs-6\"><button type=\"submit\" class=\"btn btn-info custbtnn\">Update</button></div>\n            <router-link class=\"link\" :to=\"{ name: 'propertydetails' }\"><div class=\"col-xs-6\"><button type=\"button\" class=\"btn btn-info custbtnn2\">Cancel</button></div></router-link>\n            </div>\n        </div>\n    </div>\n    </form>\n    </div>\n     <hr style=\"border-color:#EEEEEE;\">\n    <p style=\"font-size:12px;color:#B0BEC5;text-align:center;\">© Copyright 2015-2018 Paymatrix. All Rights Reserved.</p>\n</div>\n</div>\n</div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport {localstore} from '../../../main.js'\nimport {Validator} from 'vee-validate'\n\n/* eslint-disable */\n\n  const dict = {\n    en: {\n      custom: {\n        Retypeaccountnumber: {\n          is: 'Does not match Account number'\n        }\n}\n}\n};\n\n\nexport default {\n    data(){\n      return {\n        M_same_l:localstore.details.M_same,\n        imageUpload:1,\n        filevalid:true,\n        filevalid_format:true,\n        file_change:0,\n        property:{\n          user_id:localstore.details.user_id,\n          Landlord_name : localstore.details.Landlord_name,\n          Account_holder_name : localstore.details.Account_holder_name,\n          Bank_name : localstore.details.Bank_name,\n          IFSC : localstore.details.IFSC,\n          Account_number : localstore.details.Account_number,\n          retype_Account_number : localstore.details.Account_number,\n          Landlord_city : localstore.details.Landlord_city,\n          Landlord_state : localstore.details.Landlord_state,\n          Landlord_PAN_number : localstore.details.Landlord_PAN_number,\n          pan_doc : localstore.details.pan_doc,\n          pan_doc_name : localstore.details.pan_doc_name,\n          M_same:localstore.details.M_same,\n          M_Account_holder_name:localstore.details.M_Account_holder_name,\n          M_Bank_name:localstore.details.M_Bank_name,\n          M_IFSC:localstore.details.M_IFSC,\n          M_Account_number:localstore.details.M_Account_number,\n          M_retype_Account_number:localstore.details.M_Account_number\n        },\n\n\n     };\n    },\n    mounted(){\n      localstore.user.user_id = JSON.stringify(localStorage.getItem('user_id'));\n      localstore.user.token = JSON.stringify(localStorage.getItem('token'));\n      localstore.user.name = JSON.stringify(localStorage.getItem('name'));\n      localstore.user.email = JSON.stringify(localStorage.getItem('email'));\n      localstore.user.mobile = JSON.stringify(localStorage.getItem('mobile'));\n      localstore.details.user_id = JSON.stringify(localStorage.getItem('user_id'));\n      localstore.details.token = JSON.stringify(localStorage.getItem('token'));\n    },\n    created(){\n      this.$validator.extend('matchIFSC',{\n        getMessage: field => 'Incorrect IFSC',\n        validate: value => {\n          let ifsc_code = Object.values(localstore.IFSCcodes)[Object.keys(localstore.IFSCcodes).indexOf(this.property.Bank_name)];\n          let f1 = ifsc_code == this.property.IFSC.substring(0,4).toUpperCase();\n          let f2 = this.property.IFSC.length == 11;\n          return (f1 == 1) && (f2 == 1)\n        }\n      }),\n      this.$validator.extend('x',{\n        getMessage: field => 'Incorrect file format',\n        validate: value => {\n          let files = e.target.files || e.dataTransfer.files;\n         if(files[0].type!=\"application/pdf\" && files[0].type!=\"image/png\" && files[0].type!=\"image/jpeg\")\n           return 0;\n         else\n           return 1;\n        }\n      }),\n      this.$validator.extend('y',{\n        getMessage: field => 'Size limit exceeded',\n        validate: value => {\n          let files = e.target.files || e.dataTransfer.files;\n            if(files[0].size > 500 * 1024)\n              return 0;\n            else\n              return 1;\n        }\n      }),\n      this.$validator.extend('matchaccno',{\n        getMessage: field => 'Incorrect account number',\n        validate: value => {\n          let f = 0;\n          let banks = Object.keys(localstore.acclength);\n          for(var i of banks)\n          {\n            if(i == this.property.Bank_name)\n            {\n              f = 1;\n              break;\n            }\n          }\n\n          if(f == 1)\n          {\n            let accno = Object.values(localstore.acclength)[Object.keys(localstore.acclength).indexOf(this.property.Bank_name)];\n            let l = this.property.Account_number.length;\n            for(var j of accno)\n            {\n              if(l == j)\n              {\n                return 1\n              }\n            }\n            return 0;\n          }\n          else {\n            return 1;\n          }\n        }\n      }),\n      this.$validator.extend('M_matchIFSC',{\n        getMessage: field => 'Incorrect IFSC',\n        validate: value => {\n          let ifsc_code = Object.values(localstore.IFSCcodes)[Object.keys(localstore.IFSCcodes).indexOf(this.property.M_Bank_name)];\n          let f1 = ifsc_code == this.property.M_IFSC.substring(0,4).toUpperCase();\n          let f2 = this.property.M_IFSC.length == 11;\n          return (f1 == 1) && (f2 == 1)\n        }\n      }),\n      this.$validator.extend('M_matchaccno',{\n        getMessage: field => 'Incorrect account number',\n        validate: value => {\n          let f = 0;\n          let banks = Object.keys(localstore.acclength);\n          for(var i of banks)\n          {\n            if(i == this.property.M_Bank_name)\n            {\n              f = 1;\n              break;\n            }\n          }\n\n          if(f == 1)\n          {\n            let accno = Object.values(localstore.acclength)[Object.keys(localstore.acclength).indexOf(this.property.M_Bank_name)];\n            let l = this.property.M_Account_number.length;\n            for(var j of accno)\n            {\n              if(l == j)\n              {\n                return 1\n              }\n            }\n            return 0;\n          }\n          else {\n            return 1;\n          }\n        }\n      }),\n      this.$validator.extend('matchaccdig',{\n        getMessage: field => 'Incorrect account number',\n        validate: value => {\n          let f = 0;\n          let banks = Object.keys(localstore.startdig);\n          for(var i of banks)\n          {\n            if(i == this.property.Bank_name)\n            {\n              f = 1;\n              break;\n            }\n          }\n\n          if(f == 1)\n          {\n            let accno = Object.values(localstore.startdig)[Object.keys(localstore.startdig).indexOf(this.property.Bank_name)];\n\n            for(var j of accno)\n            {\n              let l1 = j.toString();\n              let len = l1.length;\n              let l2 = this.property.Account_number.substring(0,len);\n\n              if(l1 == l2)\n              {\n                return 1\n              }\n            }\n            return 0;\n          }\n          else {\n            return 1;\n          }\n        }\n      }),\n      this.$validator.extend('M_matchaccdig',{\n        getMessage: field => 'Incorrect account number',\n        validate: value => {\n          let f = 0;\n          let banks = Object.keys(localstore.startdig);\n          for(var i of banks)\n          {\n            if(i == this.property.M_Bank_name)\n            {\n              f = 1;\n              break;\n            }\n          }\n\n          if(f == 1)\n          {\n            let accno = Object.values(localstore.startdig)[Object.keys(localstore.startdig).indexOf(this.property.M_Bank_name)];\n\n            for(var j of accno)\n            {\n              let l1 = j.toString();\n              let len = l1.length;\n              let l2 = this.property.M_Account_number.substring(0,len);\n\n              if(l1 == l2)\n              {\n                return 1\n              }\n            }\n            return 0;\n          }\n          else {\n            return 1;\n          }\n        }\n      })\n\n    },\n    methods: {\n      submit3(){\n        localstore.details.M_same=1;\n        this.property.M_same=1;\n        this.M_same_l=1;\n      },\n      submit4(){\n        localstore.details.M_same=0;\n        this.property.M_same=0;\n        this.M_same_l=0;\n      },\n      onFileChange(e) {\n        this.imageUpload=1;\n        this.file_change=1;\n            let files = e.target.files || e.dataTransfer.files;\n              if (!files.length)\n                    return;\n              if(files[0].size > 500 * 1024)\n                this.filevalid=false;\n              else\n                this.filevalid=true;\n              if(files[0].type!=\"application/pdf\" && files[0].type!=\"image/png\" && files[0].type!=\"image/jpeg\")\n                this.filevalid_format=false;\n              else\n                this.filevalid_format=true;\n              this.createImage(files[0]);\n              this.property.pan_doc_name=files[0];\n          },\n          createImage(file) {\n            let reader = new FileReader();\n            reader.onload = (e) => {\n                this.property.pan_doc = e.target.result;\n            };\n            reader.readAsDataURL(file);\n          },\n          sendData() {\n            var x = this.$el.querySelector('#form2');\n            //console.log(x)\n\n            var valid = true, y=[],z=[], i=0;\n            var self = this;\n\n            this.$validator.validate('Landlord name', this.property.Landlord_name);\n            this.$validator.validate('Account holder name', this.property.Account_holder_name);\n            this.$validator.validate('IFSC', this.property.IFSC);\n            this.$validator.validate('Account number', this.property.Account_number);\n            this.$validator.validate('Landlord city', this.property.Landlord_city);\n            this.$validator.validate('Landlord state', this.property.Landlord_state);\n            this.$validator.validate('Landlord PAN number', this.property.Landlord_PAN_number);\n            if(this.M_same_l == 0){\n              this.$validator.validate('M_Account holder name', this.property.M_Account_holder_name);\n              this.$validator.validate('M_IFSC', this.property.M_IFSC);\n              this.$validator.validate('M_Account number', this.property.M_Account_number);\n            }\n\n            y = x.querySelectorAll('.step_2');\n            z = x.querySelectorAll('.step_4');\n\n            for(i=0; i<y.length;i++){\n            if((y[i].value == \"\" && y[i].name != \"Landlord PAN number\") || y[i].classList.contains('invalid')){\n             valid = false;\n            }\n            }\n\n            if(this.M_same_l == 0){\n            for(i=0; i<z.length;i++){\n            if(z[i].value == \"\" || z[i].classList.contains('invalid')){\n             valid = false;\n            }\n            }\n          }\n\n            if(!valid || !this.filevalid || !this.filevalid_format){\n               alert(\"Correct the errors\");\n            return false;\n            }else{\n              localstore.details.Landlord_name=this.property.Landlord_name;\n              localstore.details.Account_holder_name=this.property.Account_holder_name;\n              localstore.details.Bank_name=this.property.Bank_name;\n              localstore.details.IFSC=this.property.IFSC;\n              localstore.details.Account_number=this.property.Account_number;\n              localstore.details.Landlord_city=this.property.Landlord_city;\n              localstore.details.Landlord_state=this.property.Landlord_state;\n              localstore.details.Landlord_PAN_number=this.property.Landlord_PAN_number;\n              localstore.details.pan_doc=this.property.pan_doc;\n              localstore.details.pan_doc_name=this.property.pan_doc_name;\n              localstore.details.M_same=this.property.M_same;\n              localstore.details.M_Account_holder_name=this.property.M_Account_holder_name;\n              localstore.details.M_Bank_name=this.property.M_Bank_name;\n              localstore.details.M_IFSC=this.property.M_IFSC;\n              localstore.details.M_Account_number=this.property.M_Account_number;\n\n              if(this.M_same_l)\n              {\n                //console.log('hello')\n                localstore.details.M_Account_holder_name=this.property.Account_holder_name;\n                localstore.details.M_Bank_name=this.property.Bank_name;\n                localstore.details.M_IFSC=this.property.IFSC;\n                localstore.details.M_Account_number=this.property.Account_number;\n              }\n              if(!this.file_change)\n              {\n                this.property.pan_doc='';\n                localstore.details.pan_doc=''\n              }\n              console.log(JSON.stringify(this.property.pan_doc));\n              axios.put('http://127.0.0.1:8000/api/updatelandlord/'+localstore.details.landlord_id,this.property)\n                  .then((response) => {\n                    console.log(JSON.stringify(this.property))\n                    alert(response);\n                    console.log(response);\n                    if(response.data.status==\"SUCCESS\")\n                      self.$router.push('/propertydetails');\n                  })\n                  .catch((error) => alert(error))\n\n            }\n          }\n    }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\ninput.invalid{\n  border: 1px solid red !important;\n}\n.errormsg {\n  color: red\n}\n</style>\n"]}]}