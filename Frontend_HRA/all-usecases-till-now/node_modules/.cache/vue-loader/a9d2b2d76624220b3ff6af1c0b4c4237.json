{"remainingRequest":"/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/src/components/loginandsignup/signup.vue?vue&type=template&id=7136d281&scoped=true&","dependencies":[{"path":"/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/src/components/loginandsignup/signup.vue","mtime":1541835170056},{"path":"/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/node_modules/cache-loader/dist/cjs.js","mtime":1541837368340},{"path":"/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/node_modules/cache-loader/dist/cjs.js","mtime":1541837368340},{"path":"/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"section\", attrs: { id: \"signup\" } }, [\n      _c(\"nav\", [\n        _c(\"div\", { staticClass: \"header container\" }, [\n          _c(\"div\", { staticClass: \"row\" }, [\n            _vm._m(0),\n            _c(\"div\", { staticClass: \"col-sm-6 text-right \" }, [\n              _c(\"ul\", { staticClass: \"main-menu\" }, [\n                _vm._m(1),\n                _c(\n                  \"li\",\n                  { staticClass: \"mobposright\" },\n                  [\n                    _c(\"router-link\", { attrs: { to: { name: \"login\" } } }, [\n                      _vm._v(\"Login\")\n                    ])\n                  ],\n                  1\n                )\n              ])\n            ])\n          ])\n        ])\n      ]),\n      _c(\"div\", { staticClass: \"logincard\" }, [\n        _c(\"h4\", { staticClass: \"text-center logintext\" }, [_vm._v(\"Sign up\")]),\n        _c(\"div\", { staticClass: \"form-group\" }, [\n          _c(\"label\", { staticClass: \"custlbl\", attrs: { for: \"name\" } }, [\n            _vm._v(\"Name:\")\n          ]),\n          _c(\"p\", [\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"validate\",\n                  rawName: \"v-validate\",\n                  value: \"required|alpha_spaces\",\n                  expression: \"'required|alpha_spaces'\"\n                },\n                {\n                  name: \"model\",\n                  rawName: \"v-model.trim\",\n                  value: _vm.name,\n                  expression: \"name\",\n                  modifiers: { trim: true }\n                }\n              ],\n              staticClass: \"form-control sign\",\n              class: { invalid: _vm.errors.has(\"name\") },\n              attrs: {\n                type: \"text\",\n                \"data-vv-validate-on\": \"blur\",\n                name: \"name\",\n                id: \"name\"\n              },\n              domProps: { value: _vm.name },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.name = $event.target.value.trim()\n                },\n                blur: function($event) {\n                  _vm.$forceUpdate()\n                }\n              }\n            })\n          ])\n        ]),\n        _c(\"div\", { staticClass: \"form-group\" }, [\n          _c(\"label\", { staticClass: \"custlbl\", attrs: { for: \"phone_no\" } }, [\n            _vm._v(\"Mobile number:\")\n          ]),\n          _c(\"p\", [\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"validate\",\n                  rawName: \"v-validate\",\n                  value: \"required|numeric|digits:10\",\n                  expression: \"'required|numeric|digits:10'\"\n                },\n                {\n                  name: \"model\",\n                  rawName: \"v-model.trim\",\n                  value: _vm.phone_no,\n                  expression: \"phone_no\",\n                  modifiers: { trim: true }\n                }\n              ],\n              staticClass: \"form-control sign\",\n              class: { invalid: _vm.errors.has(\"phone_no\") },\n              attrs: {\n                type: \"text\",\n                \"data-vv-validate-on\": \"blur\",\n                name: \"phone_no\",\n                id: \"phone_no\"\n              },\n              domProps: { value: _vm.phone_no },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.phone_no = $event.target.value.trim()\n                },\n                blur: function($event) {\n                  _vm.$forceUpdate()\n                }\n              }\n            })\n          ])\n        ]),\n        _c(\"div\", { staticClass: \"form-group\" }, [\n          _c(\"label\", { staticClass: \"custlbl\", attrs: { for: \"email\" } }, [\n            _vm._v(\"Email address:\")\n          ]),\n          _c(\"p\", [\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"validate\",\n                  rawName: \"v-validate\",\n                  value: \"required|email\",\n                  expression: \"'required|email'\"\n                },\n                {\n                  name: \"model\",\n                  rawName: \"v-model.trim\",\n                  value: _vm.email,\n                  expression: \"email\",\n                  modifiers: { trim: true }\n                }\n              ],\n              staticClass: \"form-control sign\",\n              class: { invalid: _vm.errors.has(\"email\") },\n              attrs: {\n                type: \"email\",\n                \"data-vv-validate-on\": \"blur\",\n                name: \"email\",\n                id: \"email\"\n              },\n              domProps: { value: _vm.email },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.email = $event.target.value.trim()\n                },\n                blur: function($event) {\n                  _vm.$forceUpdate()\n                }\n              }\n            })\n          ])\n        ]),\n        _c(\"div\", { staticClass: \"form-group\" }, [\n          _c(\"label\", { staticClass: \"custlbl\", attrs: { for: \"pwd\" } }, [\n            _vm._v(\"Password:\")\n          ]),\n          _c(\"p\", [\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"validate\",\n                  rawName: \"v-validate\",\n                  value: \"required\",\n                  expression: \"'required'\"\n                },\n                {\n                  name: \"model\",\n                  rawName: \"v-model.trim\",\n                  value: _vm.password,\n                  expression: \"password\",\n                  modifiers: { trim: true }\n                }\n              ],\n              staticClass: \"form-control sign\",\n              class: { invalid: _vm.errors.has(\"password\") },\n              attrs: {\n                type: \"password\",\n                \"data-vv-validate-on\": \"blur\",\n                name: \"password\",\n                id: \"password\"\n              },\n              domProps: { value: _vm.password },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.password = $event.target.value.trim()\n                },\n                blur: function($event) {\n                  _vm.$forceUpdate()\n                }\n              }\n            }),\n            _c(\n              \"span\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: _vm.errors.has(\"password\"),\n                    expression: \"errors.has('password')\"\n                  }\n                ],\n                staticClass: \"errormsg\"\n              },\n              [_vm._v(_vm._s(_vm.errors.first(\"password\")))]\n            )\n          ])\n        ]),\n        _c(\"div\", { staticClass: \"form-group\" }, [\n          _c(\"label\", { staticClass: \"custlbl\", attrs: { for: \"pwd\" } }, [\n            _vm._v(\"Confirm Password:\")\n          ]),\n          _c(\"p\", [\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"validate\",\n                  rawName: \"v-validate\",\n                  value: { required: true, is: _vm.password },\n                  expression: \"{ required:true , is: password }\"\n                },\n                {\n                  name: \"model\",\n                  rawName: \"v-model.trim\",\n                  value: _vm.password_confirmation,\n                  expression: \"password_confirmation\",\n                  modifiers: { trim: true }\n                }\n              ],\n              staticClass: \"form-control sign\",\n              class: { invalid: _vm.errors.has(\"password_confirmation\") },\n              attrs: {\n                type: \"password\",\n                \"data-vv-validate-on\": \"blur\",\n                name: \"password_confirmation\",\n                id: \"password_confirmation\"\n              },\n              domProps: { value: _vm.password_confirmation },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.password_confirmation = $event.target.value.trim()\n                },\n                blur: function($event) {\n                  _vm.$forceUpdate()\n                }\n              }\n            }),\n            _c(\n              \"span\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: _vm.errors.has(\"password_confirmation\"),\n                    expression: \"errors.has('password_confirmation')\"\n                  }\n                ],\n                staticClass: \"errormsg\"\n              },\n              [_vm._v(_vm._s(_vm.errors.first(\"password_confirmation\")))]\n            )\n          ])\n        ]),\n        _c(\n          \"button\",\n          {\n            staticClass: \"btn btnblu\",\n            attrs: { type: \"submit\" },\n            on: {\n              click: function($event) {\n                _vm.submithandle()\n              }\n            }\n          },\n          [_vm._v(\"Sign up\")]\n        )\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"col-sm-6 mob-center\" }, [\n      _c(\"a\", { attrs: { href: \"https://paymatrix.in/home/index\" } }, [\n        _c(\"img\", {\n          staticClass: \"main-logo\",\n          attrs: {\n            src:\n              \"https://s3-ap-southeast-1.amazonaws.com/paymatrixuploads/static/new_login/paymatrix-logo.png\"\n          }\n        })\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"li\", { staticClass: \"mobposleft\" }, [\n      _c(\"a\", { attrs: { href: \"\" } }, [_vm._v(\"Home\")])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}