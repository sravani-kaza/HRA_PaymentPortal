{"remainingRequest":"/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/src/components/loginandsignup/login.vue?vue&type=template&id=2238ac90&scoped=true&","dependencies":[{"path":"/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/src/components/loginandsignup/login.vue","mtime":1541835170056},{"path":"/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/node_modules/cache-loader/dist/cjs.js","mtime":1541837368340},{"path":"/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/node_modules/cache-loader/dist/cjs.js","mtime":1541837368340},{"path":"/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\"div\", { staticClass: \"section\", attrs: { id: \"login\" } }, [\n      _c(\"nav\", [\n        _c(\"div\", { staticClass: \"header container\" }, [\n          _c(\"div\", { staticClass: \"row\" }, [\n            _vm._m(0),\n            _c(\"div\", { staticClass: \"col-sm-6 text-right \" }, [\n              _c(\"ul\", { staticClass: \"main-menu\" }, [\n                _vm._m(1),\n                _c(\n                  \"li\",\n                  { staticClass: \"mobposright\" },\n                  [\n                    _c(\"router-link\", { attrs: { to: { name: \"signup\" } } }, [\n                      _vm._v(\"Sign up\")\n                    ])\n                  ],\n                  1\n                )\n              ])\n            ])\n          ])\n        ])\n      ]),\n      _c(\"div\", { staticClass: \"logincard\" }, [\n        _c(\"h4\", { staticClass: \"text-center logintext\" }, [_vm._v(\"Login\")]),\n        _c(\"div\", { staticClass: \"form-group\" }, [\n          _c(\"label\", { staticClass: \"custlbl\", attrs: { for: \"email\" } }, [\n            _vm._v(\"Email address:\")\n          ]),\n          _c(\"p\", [\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"validate\",\n                  rawName: \"v-validate\",\n                  value: \"email\",\n                  expression: \"'email'\"\n                },\n                {\n                  name: \"model\",\n                  rawName: \"v-model.trim\",\n                  value: _vm.logindet.email,\n                  expression: \"logindet.email\",\n                  modifiers: { trim: true }\n                }\n              ],\n              staticClass: \"form-control log\",\n              class: { invalid: _vm.errors.has(\"email\") },\n              attrs: {\n                type: \"email\",\n                \"data-vv-validate-on\": \"blur\",\n                name: \"email\",\n                id: \"email\"\n              },\n              domProps: { value: _vm.logindet.email },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.$set(_vm.logindet, \"email\", $event.target.value.trim())\n                },\n                blur: function($event) {\n                  _vm.$forceUpdate()\n                }\n              }\n            }),\n            _c(\n              \"span\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: _vm.errors.has(\"email\"),\n                    expression: \"errors.has('email')\"\n                  }\n                ],\n                staticClass: \"errormsg\"\n              },\n              [_vm._v(_vm._s(_vm.errors.first(\"email\")))]\n            )\n          ])\n        ]),\n        _c(\"div\", { staticClass: \"form-group\" }, [\n          _c(\"label\", { staticClass: \"custlbl\", attrs: { for: \"pwd\" } }, [\n            _vm._v(\"Password:\")\n          ]),\n          _c(\"p\", [\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"validate\",\n                  rawName: \"v-validate\",\n                  value: \"required\",\n                  expression: \"'required'\"\n                },\n                {\n                  name: \"model\",\n                  rawName: \"v-model.trim\",\n                  value: _vm.logindet.password,\n                  expression: \"logindet.password\",\n                  modifiers: { trim: true }\n                }\n              ],\n              staticClass: \"form-control log\",\n              class: { invalid: _vm.errors.has(\"password\") },\n              attrs: {\n                type: \"password\",\n                \"data-vv-validate-on\": \"blur\",\n                name: \"password\",\n                id: \"pwd\"\n              },\n              domProps: { value: _vm.logindet.password },\n              on: {\n                input: function($event) {\n                  if ($event.target.composing) {\n                    return\n                  }\n                  _vm.$set(_vm.logindet, \"password\", $event.target.value.trim())\n                },\n                blur: function($event) {\n                  _vm.$forceUpdate()\n                }\n              }\n            }),\n            _c(\n              \"span\",\n              {\n                directives: [\n                  {\n                    name: \"show\",\n                    rawName: \"v-show\",\n                    value: _vm.errors.has(\"password\"),\n                    expression: \"errors.has('password')\"\n                  }\n                ],\n                staticClass: \"errormsg\"\n              },\n              [_vm._v(_vm._s(_vm.errors.first(\"password\")))]\n            )\n          ])\n        ]),\n        _c(\"div\", { staticClass: \"checkbox\" }, [\n          _c(\"label\", [\n            _c(\"input\", {\n              directives: [\n                {\n                  name: \"model\",\n                  rawName: \"v-model\",\n                  value: _vm.logindet.remember_me,\n                  expression: \"logindet.remember_me\"\n                }\n              ],\n              attrs: { type: \"checkbox\" },\n              domProps: {\n                checked: Array.isArray(_vm.logindet.remember_me)\n                  ? _vm._i(_vm.logindet.remember_me, null) > -1\n                  : _vm.logindet.remember_me\n              },\n              on: {\n                change: function($event) {\n                  var $$a = _vm.logindet.remember_me,\n                    $$el = $event.target,\n                    $$c = $$el.checked ? true : false\n                  if (Array.isArray($$a)) {\n                    var $$v = null,\n                      $$i = _vm._i($$a, $$v)\n                    if ($$el.checked) {\n                      $$i < 0 &&\n                        _vm.$set(_vm.logindet, \"remember_me\", $$a.concat([$$v]))\n                    } else {\n                      $$i > -1 &&\n                        _vm.$set(\n                          _vm.logindet,\n                          \"remember_me\",\n                          $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                        )\n                    }\n                  } else {\n                    _vm.$set(_vm.logindet, \"remember_me\", $$c)\n                  }\n                }\n              }\n            }),\n            _vm._v(\" Remember me\")\n          ])\n        ]),\n        _c(\n          \"button\",\n          {\n            staticClass: \"btn btnblu\",\n            attrs: { type: \"submit\" },\n            on: {\n              click: function($event) {\n                _vm.submithandle()\n              }\n            }\n          },\n          [_vm._v(\"Login\")]\n        )\n      ])\n    ])\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"col-sm-6 mob-center\" }, [\n      _c(\"a\", { attrs: { href: \"https://paymatrix.in/home/index\" } }, [\n        _c(\"img\", {\n          staticClass: \"main-logo\",\n          attrs: {\n            src:\n              \"https://s3-ap-southeast-1.amazonaws.com/paymatrixuploads/static/new_login/paymatrix-logo.png\"\n          }\n        })\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"li\", { staticClass: \"mobposleft\" }, [\n      _c(\"a\", { attrs: { href: \"\" } }, [_vm._v(\"Home\")])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}