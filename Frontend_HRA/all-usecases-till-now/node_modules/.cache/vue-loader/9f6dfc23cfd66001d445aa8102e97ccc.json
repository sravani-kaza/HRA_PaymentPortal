{"remainingRequest":"/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/src/components/userdashboard/mainform/form_main.vue?vue&type=template&id=60740b78&","dependencies":[{"path":"/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/src/components/userdashboard/mainform/form_main.vue","mtime":1541835170092},{"path":"/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/node_modules/cache-loader/dist/cjs.js","mtime":1541837368340},{"path":"/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/node_modules/cache-loader/dist/cjs.js","mtime":1541837368340},{"path":"/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", [\n    _c(\n      \"div\",\n      {\n        directives: [\n          {\n            name: \"show\",\n            rawName: \"v-show\",\n            value: _vm.step === 1,\n            expression: \"step === 1\"\n          }\n        ],\n        attrs: { id: \"form1\" }\n      },\n      [\n        _c(\"div\", { staticClass: \"mar0_15\" }, [\n          _c(\n            \"span\",\n            {\n              staticClass: \"fonweigh700\",\n              staticStyle: { float: \"right\" },\n              on: { click: _vm.closed }\n            },\n            [_c(\"a\", [_vm._v(\"X\")])]\n          ),\n          _c(\"h4\", { staticClass: \"fonweigh700\" }, [_vm._v(\"Create template\")]),\n          _c(\"hr\", { staticStyle: { \"border-color\": \"#EEEEEE\" } })\n        ]),\n        _c(\"div\", { staticClass: \"mainfomlayout\" }, [\n          _vm._m(0),\n          _c(\"hr\", { staticStyle: { \"border-color\": \"#EEEEEE\" } }),\n          _c(\"br\", { staticClass: \"hidden-xs\" }),\n          _c(\n            \"form\",\n            {\n              staticClass: \" \",\n              on: {\n                submit: function($event) {\n                  $event.preventDefault()\n                  return _vm.validateBeforeSubmit($event)\n                }\n              }\n            },\n            [\n              _c(\"div\", { staticClass: \"hrafom1\" }, [\n                _c(\"h4\", { staticStyle: { margin: \"0px 15px 20px\" } }, [\n                  _vm._v(\"Property rent details\")\n                ]),\n                _c(\"div\", { staticClass: \"row marzero0\" }, [\n                  _c(\"div\", { staticClass: \"col-sm-6\" }, [\n                    _c(\"div\", { staticClass: \"form-group custrespformgrop\" }, [\n                      _c(\"label\", { staticClass: \"lblcustm\" }, [\n                        _vm._v(\"Property name :\")\n                      ]),\n                      _c(\"p\", [\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model.trim\",\n                              value: _vm.property.Property_name,\n                              expression: \"property.Property_name\",\n                              modifiers: { trim: true }\n                            },\n                            {\n                              name: \"validate\",\n                              rawName: \"v-validate\",\n                              value: {\n                                required: true,\n                                regex: /^[A-za-z0-9\\s\\-\\/]+$/\n                              },\n                              expression:\n                                \"{ required: true, regex: /^[A-za-z0-9\\\\s\\\\-\\\\/]+$/ }\"\n                            }\n                          ],\n                          staticClass: \"form-control step_1\",\n                          class: { invalid: _vm.errors.has(\"Property name\") },\n                          attrs: {\n                            \"data-vv-validate-on\": \"blur\",\n                            name: \"Property name\",\n                            type: \"text\"\n                          },\n                          domProps: { value: _vm.property.Property_name },\n                          on: {\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.$set(\n                                _vm.property,\n                                \"Property_name\",\n                                $event.target.value.trim()\n                              )\n                            },\n                            blur: function($event) {\n                              _vm.$forceUpdate()\n                            }\n                          }\n                        }),\n                        _c(\n                          \"span\",\n                          {\n                            directives: [\n                              {\n                                name: \"show\",\n                                rawName: \"v-show\",\n                                value: _vm.errors.has(\"Property name\"),\n                                expression: \"errors.has('Property name')\"\n                              }\n                            ],\n                            staticClass: \"errormsg\"\n                          },\n                          [_vm._v(_vm._s(_vm.errors.first(\"Property name\")))]\n                        )\n                      ])\n                    ])\n                  ]),\n                  _c(\"div\", { staticClass: \"col-sm-6\" }, [\n                    _c(\"div\", { staticClass: \"form-group custrespformgrop\" }, [\n                      _c(\"label\", { staticClass: \"lblcustm\" }, [\n                        _vm._v(\"Security Deposit Amount:\")\n                      ]),\n                      _c(\"p\", [\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model.trim\",\n                              value: _vm.property.Security_deposit_amount,\n                              expression: \"property.Security_deposit_amount\",\n                              modifiers: { trim: true }\n                            },\n                            {\n                              name: \"validate\",\n                              rawName: \"v-validate\",\n                              value: \"required|numeric\",\n                              expression: \"'required|numeric'\"\n                            }\n                          ],\n                          staticClass: \"form-control step_1\",\n                          class: { invalid: _vm.errors.has(\"Securitydeposit\") },\n                          attrs: {\n                            \"data-vv-validate-on\": \"blur\",\n                            name: \"Securitydeposit\",\n                            type: \"text\"\n                          },\n                          domProps: {\n                            value: _vm.property.Security_deposit_amount\n                          },\n                          on: {\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.$set(\n                                _vm.property,\n                                \"Security_deposit_amount\",\n                                $event.target.value.trim()\n                              )\n                            },\n                            blur: function($event) {\n                              _vm.$forceUpdate()\n                            }\n                          }\n                        }),\n                        _c(\n                          \"span\",\n                          {\n                            directives: [\n                              {\n                                name: \"show\",\n                                rawName: \"v-show\",\n                                value: _vm.errors.has(\"Securitydeposit\"),\n                                expression: \"errors.has('Securitydeposit')\"\n                              }\n                            ],\n                            staticClass: \"errormsg\"\n                          },\n                          [_vm._v(_vm._s(_vm.errors.first(\"Securitydeposit\")))]\n                        )\n                      ])\n                    ])\n                  ])\n                ]),\n                _c(\"div\", { staticClass: \"row marzero0\" }, [\n                  _c(\"div\", { staticClass: \"col-sm-6\" }, [\n                    _c(\"div\", { staticClass: \"form-group custrespformgrop\" }, [\n                      _c(\"label\", { staticClass: \"lblcustm\" }, [\n                        _vm._v(\"Rent amount :\")\n                      ]),\n                      _c(\"p\", [\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model.trim\",\n                              value: _vm.property.Rent_amount,\n                              expression: \"property.Rent_amount\",\n                              modifiers: { trim: true }\n                            },\n                            {\n                              name: \"validate\",\n                              rawName: \"v-validate\",\n                              value: \"required|numeric\",\n                              expression: \"'required|numeric'\"\n                            }\n                          ],\n                          staticClass: \"form-control step_1\",\n                          class: { invalid: _vm.errors.has(\"Rent amount\") },\n                          attrs: {\n                            \"data-vv-validate-on\": \"blur\",\n                            name: \"Rent amount\",\n                            type: \"text\"\n                          },\n                          domProps: { value: _vm.property.Rent_amount },\n                          on: {\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.$set(\n                                _vm.property,\n                                \"Rent_amount\",\n                                $event.target.value.trim()\n                              )\n                            },\n                            blur: function($event) {\n                              _vm.$forceUpdate()\n                            }\n                          }\n                        }),\n                        _c(\n                          \"span\",\n                          {\n                            directives: [\n                              {\n                                name: \"show\",\n                                rawName: \"v-show\",\n                                value: _vm.errors.has(\"Rent amount\"),\n                                expression: \"errors.has('Rent amount')\"\n                              }\n                            ],\n                            staticClass: \"errormsg\"\n                          },\n                          [\n                            _vm._v(\n                              _vm._s(_vm.errors.first(\"Rent amount\")) +\n                                \"\\r\\n\\r\\n                          \"\n                            )\n                          ]\n                        )\n                      ])\n                    ])\n                  ]),\n                  _c(\"div\", { staticClass: \"col-sm-6\" }, [\n                    _c(\"div\", { staticClass: \"form-group custrespformgrop\" }, [\n                      _c(\"label\", { staticClass: \"lblcustm\" }, [\n                        _vm._v(\"Maintenance amount :\")\n                      ]),\n                      _c(\"p\", [\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model.trim\",\n                              value: _vm.property.Maintenance_amount,\n                              expression: \"property.Maintenance_amount\",\n                              modifiers: { trim: true }\n                            },\n                            {\n                              name: \"validate\",\n                              rawName: \"v-validate\",\n                              value: \"required|numeric\",\n                              expression: \"'required|numeric'\"\n                            }\n                          ],\n                          staticClass: \"form-control step_1\",\n                          class: {\n                            invalid: _vm.errors.has(\"Maintenance amount\")\n                          },\n                          attrs: {\n                            \"data-vv-validate-on\": \"blur\",\n                            name: \"Maintenance amount\",\n                            type: \"text\"\n                          },\n                          domProps: { value: _vm.property.Maintenance_amount },\n                          on: {\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.$set(\n                                _vm.property,\n                                \"Maintenance_amount\",\n                                $event.target.value.trim()\n                              )\n                            },\n                            blur: function($event) {\n                              _vm.$forceUpdate()\n                            }\n                          }\n                        }),\n                        _c(\n                          \"span\",\n                          {\n                            directives: [\n                              {\n                                name: \"show\",\n                                rawName: \"v-show\",\n                                value: _vm.errors.has(\"Maintenance amount\"),\n                                expression: \"errors.has('Maintenance amount')\"\n                              }\n                            ],\n                            staticClass: \"errormsg\"\n                          },\n                          [\n                            _vm._v(\n                              _vm._s(_vm.errors.first(\"Maintenance amount\"))\n                            )\n                          ]\n                        )\n                      ])\n                    ])\n                  ])\n                ]),\n                _c(\"div\", { staticClass: \"row marzero0\" }, [\n                  _c(\"div\", { staticClass: \"col-sm-6\" }, [\n                    _c(\"div\", { staticClass: \"form-group custrespformgrop\" }, [\n                      _c(\"label\", { staticClass: \"lblcustm\" }, [\n                        _vm._v(\"Rent due date :\")\n                      ]),\n                      _c(\"p\", [\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model.trim\",\n                              value: _vm.property.Rent_due_date,\n                              expression: \"property.Rent_due_date\",\n                              modifiers: { trim: true }\n                            },\n                            {\n                              name: \"validate\",\n                              rawName: \"v-validate\",\n                              value:\n                                \"required|integer|max_value:31|min_value:1\",\n                              expression:\n                                \"'required|integer|max_value:31|min_value:1'\"\n                            }\n                          ],\n                          staticClass: \"form-control step_1\",\n                          class: { invalid: _vm.errors.has(\"Rent due date\") },\n                          attrs: {\n                            \"data-vv-validate-on\": \"blur\",\n                            placeholder: \"DD\",\n                            name: \"Rent due date\",\n                            type: \"text\"\n                          },\n                          domProps: { value: _vm.property.Rent_due_date },\n                          on: {\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.$set(\n                                _vm.property,\n                                \"Rent_due_date\",\n                                $event.target.value.trim()\n                              )\n                            },\n                            blur: function($event) {\n                              _vm.$forceUpdate()\n                            }\n                          }\n                        }),\n                        _c(\n                          \"span\",\n                          {\n                            directives: [\n                              {\n                                name: \"show\",\n                                rawName: \"v-show\",\n                                value: _vm.errors.has(\"Rent due date\"),\n                                expression: \"errors.has('Rent due date')\"\n                              }\n                            ],\n                            staticClass: \"errormsg\"\n                          },\n                          [_vm._v(_vm._s(_vm.errors.first(\"Rent due date\")))]\n                        )\n                      ])\n                    ])\n                  ]),\n                  _c(\"div\", { staticClass: \"col-sm-6\" }, [\n                    _c(\"div\", { staticClass: \"form-group custrespformgrop\" }, [\n                      _c(\"label\", { staticClass: \"lblcustm\" }, [\n                        _vm._v(\"Maintenance due date :\")\n                      ]),\n                      _c(\"p\", [\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model.trim\",\n                              value: _vm.property.Maintenance_due_date,\n                              expression: \"property.Maintenance_due_date\",\n                              modifiers: { trim: true }\n                            },\n                            {\n                              name: \"validate\",\n                              rawName: \"v-validate\",\n                              value:\n                                \"required|integer|max_value:31|min_value:1\",\n                              expression:\n                                \"'required|integer|max_value:31|min_value:1'\"\n                            }\n                          ],\n                          staticClass: \"form-control step_1\",\n                          class: {\n                            invalid: _vm.errors.has(\"Maintenance due date\")\n                          },\n                          attrs: {\n                            \"data-vv-validate-on\": \"blur\",\n                            placeholder: \"DD\",\n                            name: \"Maintenance due date\",\n                            type: \"text\"\n                          },\n                          domProps: {\n                            value: _vm.property.Maintenance_due_date\n                          },\n                          on: {\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.$set(\n                                _vm.property,\n                                \"Maintenance_due_date\",\n                                $event.target.value.trim()\n                              )\n                            },\n                            blur: function($event) {\n                              _vm.$forceUpdate()\n                            }\n                          }\n                        }),\n                        _c(\n                          \"span\",\n                          {\n                            directives: [\n                              {\n                                name: \"show\",\n                                rawName: \"v-show\",\n                                value: _vm.errors.has(\"Maintenance due date\"),\n                                expression: \"errors.has('Maintenance due date')\"\n                              }\n                            ],\n                            staticClass: \"errormsg\"\n                          },\n                          [\n                            _vm._v(\n                              _vm._s(_vm.errors.first(\"Maintenance due date\"))\n                            )\n                          ]\n                        )\n                      ])\n                    ])\n                  ])\n                ]),\n                _c(\"div\", { staticClass: \"row marzero0\" }, [\n                  _c(\"div\", { staticClass: \"col-sm-6\" }, [\n                    _c(\"div\", { staticClass: \"form-group custrespformgrop\" }, [\n                      _c(\"label\", { staticClass: \"lblcustm\" }, [\n                        _vm._v(\"Staying since :\")\n                      ]),\n                      _c(\"p\", [\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model.trim\",\n                              value: _vm.property.Staying_since,\n                              expression: \"property.Staying_since\",\n                              modifiers: { trim: true }\n                            },\n                            {\n                              name: \"validate\",\n                              rawName: \"v-validate\",\n                              value:\n                                \"required|date_format:DD/MM/YYYY|notfuture\",\n                              expression:\n                                \"'required|date_format:DD/MM/YYYY|notfuture'\"\n                            }\n                          ],\n                          staticClass: \"form-control step_1\",\n                          class: { invalid: _vm.errors.has(\"Staying since\") },\n                          attrs: {\n                            \"data-vv-validate-on\": \"blur\",\n                            placeholder: \"DD/MM/YYYY\",\n                            name: \"Staying since\",\n                            type: \"date\"\n                          },\n                          domProps: { value: _vm.property.Staying_since },\n                          on: {\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.$set(\n                                _vm.property,\n                                \"Staying_since\",\n                                $event.target.value.trim()\n                              )\n                            },\n                            blur: function($event) {\n                              _vm.$forceUpdate()\n                            }\n                          }\n                        }),\n                        _c(\n                          \"span\",\n                          {\n                            directives: [\n                              {\n                                name: \"show\",\n                                rawName: \"v-show\",\n                                value: _vm.errors.has(\"Staying since\"),\n                                expression: \"errors.has('Staying since')\"\n                              }\n                            ],\n                            staticClass: \"errormsg\"\n                          },\n                          [_vm._v(_vm._s(_vm.errors.first(\"Staying since\")))]\n                        )\n                      ])\n                    ])\n                  ]),\n                  _c(\"div\", { staticClass: \"col-sm-6\" }, [\n                    _c(\"div\", { staticClass: \"form-group custrespformgrop\" }, [\n                      _c(\"br\"),\n                      _c(\"label\", { staticClass: \"lblcustm\" }, [\n                        _vm._v(\"Are you paid security deposit?\")\n                      ]),\n                      _c(\"input\", {\n                        attrs: {\n                          type: \"radio\",\n                          id: \"sec1\",\n                          name: \"deposit\",\n                          value: \"yes\"\n                        },\n                        on: { click: _vm.submit1 }\n                      }),\n                      _vm._m(1),\n                      _c(\"input\", {\n                        attrs: {\n                          type: \"radio\",\n                          id: \"sec2\",\n                          name: \"deposit\",\n                          value: \"no\"\n                        },\n                        on: { click: _vm.submit2 }\n                      }),\n                      _vm._m(2)\n                    ])\n                  ])\n                ]),\n                _c(\"div\", { staticClass: \"row marzero0\" }, [\n                  _c(\"div\", { staticClass: \"col-sm-6\" }, [\n                    _c(\"div\", { staticClass: \"form-group custrespformgrop\" }, [\n                      _c(\"label\", { staticClass: \"lblcustm\" }, [\n                        _vm._v(\"Upload property image :\")\n                      ]),\n                      _c(\"div\", { staticClass: \"file-drop-area\" }, [\n                        _vm._m(3),\n                        _c(\"input\", {\n                          staticClass: \"file-input\",\n                          attrs: {\n                            name: \"property image\",\n                            type: \"file\",\n                            required: \"\"\n                          },\n                          on: { change: _vm.onFileChange }\n                        })\n                      ]),\n                      _c(\"small\", [\n                        _vm._v(\"jpg/png/pdf files with a size less than 500kb\")\n                      ]),\n                      _c(\n                        \"div\",\n                        {\n                          directives: [\n                            {\n                              name: \"show\",\n                              rawName: \"v-show\",\n                              value: _vm.imageUpload1 === 1,\n                              expression: \"imageUpload1===1\"\n                            }\n                          ]\n                        },\n                        [_vm._m(4)]\n                      ),\n                      _c(\n                        \"div\",\n                        {\n                          directives: [\n                            {\n                              name: \"show\",\n                              rawName: \"v-show\",\n                              value: _vm.filevalid == false,\n                              expression: \"filevalid==false\"\n                            }\n                          ],\n                          staticClass: \"errormsg\"\n                        },\n                        [\n                          _c(\"b\", [\n                            _vm._v(\"File uploaded has exceeded size limit \")\n                          ])\n                        ]\n                      ),\n                      _c(\n                        \"div\",\n                        {\n                          directives: [\n                            {\n                              name: \"show\",\n                              rawName: \"v-show\",\n                              value: _vm.filevalid_format == false,\n                              expression: \"filevalid_format==false\"\n                            }\n                          ],\n                          staticClass: \"errormsg\"\n                        },\n                        [\n                          _c(\"b\", [\n                            _vm._v(\n                              \"File uploaded is not of the format jpg/png/pdf/jpeg\"\n                            )\n                          ])\n                        ]\n                      )\n                    ])\n                  ])\n                ]),\n                _c(\"h4\", { staticStyle: { margin: \"0px 15px 20px\" } }, [\n                  _vm._v(\"Property rent details\")\n                ]),\n                _c(\"div\", { staticClass: \"row marzero0\" }, [\n                  _c(\"div\", { staticClass: \"col-sm-6\" }, [\n                    _c(\"div\", { staticClass: \"form-group custrespformgrop\" }, [\n                      _c(\"label\", { staticClass: \"lblcustm\" }, [\n                        _vm._v(\"Door number :\")\n                      ]),\n                      _c(\"p\", [\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model.trim\",\n                              value: _vm.property.Door_number,\n                              expression: \"property.Door_number\",\n                              modifiers: { trim: true }\n                            },\n                            {\n                              name: \"validate\",\n                              rawName: \"v-validate\",\n                              value: {\n                                required: true,\n                                regex: /^[A-za-z0-9\\s\\-\\/]+$/\n                              },\n                              expression:\n                                \"{ required: true, regex: /^[A-za-z0-9\\\\s\\\\-\\\\/]+$/ }\"\n                            }\n                          ],\n                          staticClass: \"form-control step_1\",\n                          class: { invalid: _vm.errors.has(\"Door number\") },\n                          attrs: {\n                            \"data-vv-validate-on\": \"blur\",\n                            name: \"Door number\",\n                            type: \"text\"\n                          },\n                          domProps: { value: _vm.property.Door_number },\n                          on: {\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.$set(\n                                _vm.property,\n                                \"Door_number\",\n                                $event.target.value.trim()\n                              )\n                            },\n                            blur: function($event) {\n                              _vm.$forceUpdate()\n                            }\n                          }\n                        }),\n                        _c(\n                          \"span\",\n                          {\n                            directives: [\n                              {\n                                name: \"show\",\n                                rawName: \"v-show\",\n                                value: _vm.errors.has(\"Door number\"),\n                                expression: \"errors.has('Door number')\"\n                              }\n                            ],\n                            staticClass: \"errormsg\"\n                          },\n                          [_vm._v(_vm._s(_vm.errors.first(\"Door number\")))]\n                        )\n                      ])\n                    ])\n                  ]),\n                  _c(\"div\", { staticClass: \"col-sm-6\" }, [\n                    _c(\"div\", { staticClass: \"form-group custrespformgrop\" }, [\n                      _c(\"label\", { staticClass: \"lblcustm\" }, [\n                        _vm._v(\"Society :\")\n                      ]),\n                      _c(\"p\", [\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model.trim\",\n                              value: _vm.property.Society,\n                              expression: \"property.Society\",\n                              modifiers: { trim: true }\n                            },\n                            {\n                              name: \"validate\",\n                              rawName: \"v-validate\",\n                              value: {\n                                required: true,\n                                regex: /^[A-za-z0-9\\s\\-\\/]+$/\n                              },\n                              expression:\n                                \"{ required: true, regex: /^[A-za-z0-9\\\\s\\\\-\\\\/]+$/ }\"\n                            }\n                          ],\n                          staticClass: \"form-control step_1\",\n                          class: { invalid: _vm.errors.has(\"Society\") },\n                          attrs: {\n                            \"data-vv-validate-on\": \"blur\",\n                            name: \"Society\",\n                            type: \"text\"\n                          },\n                          domProps: { value: _vm.property.Society },\n                          on: {\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.$set(\n                                _vm.property,\n                                \"Society\",\n                                $event.target.value.trim()\n                              )\n                            },\n                            blur: function($event) {\n                              _vm.$forceUpdate()\n                            }\n                          }\n                        }),\n                        _c(\n                          \"span\",\n                          {\n                            directives: [\n                              {\n                                name: \"show\",\n                                rawName: \"v-show\",\n                                value: _vm.errors.has(\"Society\"),\n                                expression: \"errors.has('Society')\"\n                              }\n                            ],\n                            staticClass: \"errormsg\"\n                          },\n                          [_vm._v(_vm._s(_vm.errors.first(\"Society\")))]\n                        )\n                      ])\n                    ])\n                  ])\n                ]),\n                _c(\"div\", { staticClass: \"row marzero0\" }, [\n                  _c(\"div\", { staticClass: \"col-sm-6\" }, [\n                    _c(\"div\", { staticClass: \"form-group custrespformgrop\" }, [\n                      _c(\"label\", { staticClass: \"lblcustm\" }, [\n                        _vm._v(\"Area :\")\n                      ]),\n                      _c(\"p\", [\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model.trim\",\n                              value: _vm.property.Area,\n                              expression: \"property.Area\",\n                              modifiers: { trim: true }\n                            },\n                            {\n                              name: \"validate\",\n                              rawName: \"v-validate\",\n                              value: {\n                                required: true,\n                                regex: /^[A-za-z0-9\\s\\-\\/]+$/\n                              },\n                              expression:\n                                \"{ required: true, regex: /^[A-za-z0-9\\\\s\\\\-\\\\/]+$/ }\"\n                            }\n                          ],\n                          staticClass: \"form-control step_1\",\n                          class: { invalid: _vm.errors.has(\"Area\") },\n                          attrs: {\n                            \"data-vv-validate-on\": \"blur\",\n                            name: \"Area\",\n                            type: \"text\"\n                          },\n                          domProps: { value: _vm.property.Area },\n                          on: {\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.$set(\n                                _vm.property,\n                                \"Area\",\n                                $event.target.value.trim()\n                              )\n                            },\n                            blur: function($event) {\n                              _vm.$forceUpdate()\n                            }\n                          }\n                        }),\n                        _c(\n                          \"span\",\n                          {\n                            directives: [\n                              {\n                                name: \"show\",\n                                rawName: \"v-show\",\n                                value: _vm.errors.has(\"Area\"),\n                                expression: \"errors.has('Area')\"\n                              }\n                            ],\n                            staticClass: \"errormsg\"\n                          },\n                          [_vm._v(_vm._s(_vm.errors.first(\"Area\")))]\n                        )\n                      ])\n                    ])\n                  ]),\n                  _c(\"div\", { staticClass: \"col-sm-6\" }, [\n                    _c(\"div\", { staticClass: \"form-group custrespformgrop\" }, [\n                      _c(\"label\", { staticClass: \"lblcustm\" }, [\n                        _vm._v(\"City :\")\n                      ]),\n                      _c(\"p\", [\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model.trim\",\n                              value: _vm.property.City,\n                              expression: \"property.City\",\n                              modifiers: { trim: true }\n                            },\n                            {\n                              name: \"validate\",\n                              rawName: \"v-validate\",\n                              value: {\n                                required: true,\n                                regex: /^[A-za-z0-9\\s\\-\\/]+$/\n                              },\n                              expression:\n                                \"{ required: true, regex: /^[A-za-z0-9\\\\s\\\\-\\\\/]+$/ }\"\n                            }\n                          ],\n                          staticClass: \"form-control step_1\",\n                          class: { invalid: _vm.errors.has(\"City\") },\n                          attrs: {\n                            \"data-vv-validate-on\": \"blur\",\n                            name: \"City\",\n                            type: \"text\"\n                          },\n                          domProps: { value: _vm.property.City },\n                          on: {\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.$set(\n                                _vm.property,\n                                \"City\",\n                                $event.target.value.trim()\n                              )\n                            },\n                            blur: function($event) {\n                              _vm.$forceUpdate()\n                            }\n                          }\n                        }),\n                        _c(\n                          \"span\",\n                          {\n                            directives: [\n                              {\n                                name: \"show\",\n                                rawName: \"v-show\",\n                                value: _vm.errors.has(\"City\"),\n                                expression: \"errors.has('City')\"\n                              }\n                            ],\n                            staticClass: \"errormsg\"\n                          },\n                          [_vm._v(_vm._s(_vm.errors.first(\"City\")))]\n                        )\n                      ])\n                    ])\n                  ])\n                ]),\n                _c(\"div\", { staticClass: \"row marzero0\" }, [\n                  _c(\"div\", { staticClass: \"col-sm-6\" }, [\n                    _c(\"div\", { staticClass: \"form-group custrespformgrop\" }, [\n                      _c(\"label\", { staticClass: \"lblcustm\" }, [\n                        _vm._v(\"State :\")\n                      ]),\n                      _c(\"p\", [\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model.trim\",\n                              value: _vm.property.State,\n                              expression: \"property.State\",\n                              modifiers: { trim: true }\n                            },\n                            {\n                              name: \"validate\",\n                              rawName: \"v-validate\",\n                              value: {\n                                required: true,\n                                regex: /^[A-za-z\\s\\-\\/]+$/\n                              },\n                              expression:\n                                \"{ required: true, regex: /^[A-za-z\\\\s\\\\-\\\\/]+$/ }\"\n                            }\n                          ],\n                          staticClass: \"form-control step_1\",\n                          class: { invalid: _vm.errors.has(\"State\") },\n                          attrs: {\n                            \"data-vv-validate-on\": \"blur\",\n                            name: \"State\",\n                            type: \"text\"\n                          },\n                          domProps: { value: _vm.property.State },\n                          on: {\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.$set(\n                                _vm.property,\n                                \"State\",\n                                $event.target.value.trim()\n                              )\n                            },\n                            blur: function($event) {\n                              _vm.$forceUpdate()\n                            }\n                          }\n                        }),\n                        _c(\n                          \"span\",\n                          {\n                            directives: [\n                              {\n                                name: \"show\",\n                                rawName: \"v-show\",\n                                value: _vm.errors.has(\"State\"),\n                                expression: \"errors.has('State')\"\n                              }\n                            ],\n                            staticClass: \"errormsg\"\n                          },\n                          [_vm._v(_vm._s(_vm.errors.first(\"State\")))]\n                        )\n                      ])\n                    ])\n                  ]),\n                  _c(\"div\", { staticClass: \"col-sm-6\" }, [\n                    _c(\"div\", { staticClass: \"form-group custrespformgrop\" }, [\n                      _c(\"label\", { staticClass: \"lblcustm\" }, [\n                        _vm._v(\"Pin :\")\n                      ]),\n                      _c(\"p\", [\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model.trim\",\n                              value: _vm.property.Pin,\n                              expression: \"property.Pin\",\n                              modifiers: { trim: true }\n                            },\n                            {\n                              name: \"validate\",\n                              rawName: \"v-validate\",\n                              value: \"required|digits:6\",\n                              expression: \"'required|digits:6'\"\n                            }\n                          ],\n                          staticClass: \"form-control step_1\",\n                          class: { invalid: _vm.errors.has(\"Pin\") },\n                          attrs: {\n                            \"data-vv-validate-on\": \"blur\",\n                            placeholder: \"xxxxxx\",\n                            name: \"Pin\",\n                            type: \"text\"\n                          },\n                          domProps: { value: _vm.property.Pin },\n                          on: {\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.$set(\n                                _vm.property,\n                                \"Pin\",\n                                $event.target.value.trim()\n                              )\n                            },\n                            blur: function($event) {\n                              _vm.$forceUpdate()\n                            }\n                          }\n                        }),\n                        _c(\n                          \"span\",\n                          {\n                            directives: [\n                              {\n                                name: \"show\",\n                                rawName: \"v-show\",\n                                value: _vm.errors.has(\"Pin\"),\n                                expression: \"errors.has('Pin')\"\n                              }\n                            ],\n                            staticClass: \"errormsg\"\n                          },\n                          [_vm._v(_vm._s(_vm.errors.first(\"Pin\")))]\n                        )\n                      ])\n                    ])\n                  ])\n                ]),\n                _vm._m(5)\n              ]),\n              _c(\"hr\", { staticStyle: { \"border-color\": \"#EEEEEE\" } }),\n              _c(\n                \"p\",\n                {\n                  staticStyle: {\n                    \"font-size\": \"12px\",\n                    color: \"#B0BEC5\",\n                    \"text-align\": \"center\"\n                  }\n                },\n                [\n                  _vm._v(\n                    \"© Copyright 2015-2018 Paymatrix. All Rights Reserved.\"\n                  )\n                ]\n              )\n            ]\n          )\n        ])\n      ]\n    ),\n    _c(\n      \"div\",\n      {\n        directives: [\n          {\n            name: \"show\",\n            rawName: \"v-show\",\n            value: _vm.step === 2,\n            expression: \"step===2\"\n          }\n        ],\n        attrs: { id: \"form2\" }\n      },\n      [\n        _vm._m(6),\n        _c(\"div\", { staticClass: \"mainfomlayout\" }, [\n          _vm._m(7),\n          _c(\"hr\", { staticStyle: { \"border-color\": \"#EEEEEE\" } }),\n          _c(\"a\", { staticClass: \"custback\", on: { click: _vm.back } }, [\n            _c(\"i\", { staticClass: \"fas fa-chevron-left\" }),\n            _vm._v(\" Back\")\n          ]),\n          _c(\n            \"div\",\n            {\n              staticClass: \"row\",\n              staticStyle: {\n                \"margin-top\": \"10px\",\n                \"font-family\": \"'Roboto', sans-serif\"\n              }\n            },\n            [\n              _c(\n                \"form\",\n                {\n                  staticClass: \" \",\n                  on: {\n                    submit: function($event) {\n                      $event.preventDefault()\n                      return _vm.sendData($event)\n                    }\n                  }\n                },\n                [\n                  _c(\"div\", { staticClass: \"hrafom1\" }, [\n                    _c(\"h4\", { staticStyle: { margin: \"0px 15px 20px\" } }, [\n                      _vm._v(\"Landlord account details\")\n                    ]),\n                    _c(\"div\", { staticClass: \"row marzero0\" }, [\n                      _c(\"div\", { staticClass: \"col-sm-6\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group custrespformgrop\" },\n                          [\n                            _c(\"label\", { staticClass: \"lblcustm\" }, [\n                              _vm._v(\"Landlord name :\")\n                            ]),\n                            _c(\"p\", [\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model.trim\",\n                                    value: _vm.property.Landlord_name,\n                                    expression: \"property.Landlord_name\",\n                                    modifiers: { trim: true }\n                                  },\n                                  {\n                                    name: \"validate\",\n                                    rawName: \"v-validate\",\n                                    value: {\n                                      required: true,\n                                      regex: /^[A-z\\s\\-\\/]+$/\n                                    },\n                                    expression:\n                                      \"{ required:true , regex:/^[A-z\\\\s\\\\-\\\\/]+$/ }\"\n                                  }\n                                ],\n                                staticClass: \"form-control step_2\",\n                                class: {\n                                  invalid: _vm.errors.has(\"Landlord name\")\n                                },\n                                attrs: {\n                                  \"data-vv-validate-on\": \"blur\",\n                                  name: \"Landlord name\",\n                                  type: \"text\"\n                                },\n                                domProps: { value: _vm.property.Landlord_name },\n                                on: {\n                                  input: function($event) {\n                                    if ($event.target.composing) {\n                                      return\n                                    }\n                                    _vm.$set(\n                                      _vm.property,\n                                      \"Landlord_name\",\n                                      $event.target.value.trim()\n                                    )\n                                  },\n                                  blur: function($event) {\n                                    _vm.$forceUpdate()\n                                  }\n                                }\n                              }),\n                              _c(\n                                \"span\",\n                                {\n                                  directives: [\n                                    {\n                                      name: \"show\",\n                                      rawName: \"v-show\",\n                                      value: _vm.errors.has(\"Landlord name\"),\n                                      expression: \"errors.has('Landlord name')\"\n                                    }\n                                  ],\n                                  staticClass: \"errormsg\"\n                                },\n                                [\n                                  _vm._v(\n                                    _vm._s(_vm.errors.first(\"Landlord name\"))\n                                  )\n                                ]\n                              )\n                            ])\n                          ]\n                        )\n                      ]),\n                      _c(\"div\", { staticClass: \"col-sm-6\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group custrespformgrop\" },\n                          [\n                            _c(\"label\", { staticClass: \"lblcustm\" }, [\n                              _vm._v(\"Account holder name :\")\n                            ]),\n                            _c(\"p\", [\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model.trim\",\n                                    value: _vm.property.Account_holder_name,\n                                    expression: \"property.Account_holder_name\",\n                                    modifiers: { trim: true }\n                                  },\n                                  {\n                                    name: \"validate\",\n                                    rawName: \"v-validate\",\n                                    value: {\n                                      required: true,\n                                      regex: /^[A-z\\s]+$/\n                                    },\n                                    expression:\n                                      \"{ required:true , regex:/^[A-z\\\\s]+$/ }\"\n                                  }\n                                ],\n                                staticClass: \"form-control step_2\",\n                                class: {\n                                  invalid: _vm.errors.has(\"Account holder name\")\n                                },\n                                attrs: {\n                                  \"data-vv-validate-on\": \"blur\",\n                                  name: \"Account holder name\",\n                                  type: \"text\"\n                                },\n                                domProps: {\n                                  value: _vm.property.Account_holder_name\n                                },\n                                on: {\n                                  input: function($event) {\n                                    if ($event.target.composing) {\n                                      return\n                                    }\n                                    _vm.$set(\n                                      _vm.property,\n                                      \"Account_holder_name\",\n                                      $event.target.value.trim()\n                                    )\n                                  },\n                                  blur: function($event) {\n                                    _vm.$forceUpdate()\n                                  }\n                                }\n                              }),\n                              _c(\n                                \"span\",\n                                {\n                                  directives: [\n                                    {\n                                      name: \"show\",\n                                      rawName: \"v-show\",\n                                      value: _vm.errors.has(\n                                        \"Account holder name\"\n                                      ),\n                                      expression:\n                                        \"errors.has('Account holder name')\"\n                                    }\n                                  ],\n                                  staticClass: \"errormsg\"\n                                },\n                                [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.errors.first(\"Account holder name\")\n                                    )\n                                  )\n                                ]\n                              )\n                            ])\n                          ]\n                        )\n                      ])\n                    ]),\n                    _c(\"div\", { staticClass: \"row marzero0\" }, [\n                      _c(\"div\", { staticClass: \"col-sm-6\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group custrespformgrop\" },\n                          [\n                            _c(\"label\", { staticClass: \"lblcustm\" }, [\n                              _vm._v(\"Bank name :\")\n                            ]),\n                            _c(\n                              \"select\",\n                              {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model.trim\",\n                                    value: _vm.property.Bank_name,\n                                    expression: \"property.Bank_name\",\n                                    modifiers: { trim: true }\n                                  }\n                                ],\n                                staticClass: \"form-control step_2\",\n                                class: { invalid: _vm.errors.has(\"Bank name\") },\n                                attrs: {\n                                  name: \"Bank name\",\n                                  id: \"sel1\",\n                                  required: \"\"\n                                },\n                                on: {\n                                  change: function($event) {\n                                    var $$selectedVal = Array.prototype.filter\n                                      .call($event.target.options, function(o) {\n                                        return o.selected\n                                      })\n                                      .map(function(o) {\n                                        var val =\n                                          \"_value\" in o ? o._value : o.value\n                                        return val\n                                      })\n                                    _vm.$set(\n                                      _vm.property,\n                                      \"Bank_name\",\n                                      $event.target.multiple\n                                        ? $$selectedVal\n                                        : $$selectedVal[0]\n                                    )\n                                  }\n                                }\n                              },\n                              [\n                                _c(\"option\", [_vm._v(\"Allahabad Bank\")]),\n                                _c(\"option\", [_vm._v(\"Andhra Bank\")]),\n                                _c(\"option\", [_vm._v(\"Axis Bank\")]),\n                                _c(\"option\", [_vm._v(\"Bank of Baroda\")]),\n                                _c(\"option\", [_vm._v(\"Bank of India\")]),\n                                _c(\"option\", [_vm._v(\"Bank of Maharashtra\")]),\n                                _c(\"option\", [_vm._v(\"Bank of Punjab\")]),\n                                _c(\"option\", [_vm._v(\"Bank of Rajasthan\")]),\n                                _c(\"option\", [_vm._v(\"BNP Paribas\")]),\n                                _c(\"option\", [_vm._v('Canara Bank\"')]),\n                                _c(\"option\", [_vm._v(\"Central Bank of India\")]),\n                                _c(\"option\", [_vm._v(\"Centurion Ban\")]),\n                                _c(\"option\", [_vm._v(\"Corporation Bank\")]),\n                                _c(\"option\", [_vm._v(\"Citi Bank\")]),\n                                _c(\"option\", [_vm._v(\"City Union Bank\")]),\n                                _c(\"option\", [_vm._v(\"Catholic Syrian Bank\")]),\n                                _c(\"option\", [_vm._v(\"DCB Bank\")]),\n                                _c(\"option\", [\n                                  _vm._v(\"Development Credit Bank\")\n                                ]),\n                                _c(\"option\", [_vm._v(\"Deutsche Bank AG\")]),\n                                _c(\"option\", [_vm._v(\"Dhanlakshmi Bank\")]),\n                                _c(\"option\", [_vm._v(\"Dena Bank\")]),\n                                _c(\"option\", [_vm._v(\"Federal Bank\")]),\n                                _c(\"option\", [_vm._v(\"HDFC Bank\")]),\n                                _c(\"option\", [_vm._v(\"HSBC Bank\")]),\n                                _c(\"option\", [_vm._v(\"ICICI Bank\")]),\n                                _c(\"option\", [_vm._v(\"IDBI Bank\")]),\n                                _c(\"option\", [_vm._v(\"Indian Bank\")]),\n                                _c(\"option\", [_vm._v(\"Indian Overseas Bank\")]),\n                                _c(\"option\", [_vm._v(\"IndusInd Bank\")]),\n                                _c(\"option\", [_vm._v(\"ING Vysya Bank\")]),\n                                _c(\"option\", [_vm._v(\"Jammu & Kashmir Bank\")]),\n                                _c(\"option\", [_vm._v(\"Karnataka Bank\")]),\n                                _c(\"option\", [_vm._v(\"Kotak Mahindra Bank\")]),\n                                _c(\"option\", [_vm._v(\"Karur Vysya Bank\")]),\n                                _c(\"option\", [_vm._v(\"Lakshmi Vilas Bank\")]),\n                                _c(\"option\", [\n                                  _vm._v(\"NKGSB Co-operative Bank Ltd\")\n                                ]),\n                                _c(\"option\", [\n                                  _vm._v(\"Oriental Bank of Commerce\")\n                                ]),\n                                _c(\"option\", [_vm._v(\"PunjabSind Bank\")]),\n                                _c(\"option\", [_vm._v(\"Punjab National Bank\")]),\n                                _c(\"option\", [\n                                  _vm._v(\"Standard Chartered Bank\")\n                                ]),\n                                _c(\"option\", [_vm._v(\"State Bank of India\")]),\n                                _c(\"option\", [_vm._v(\"State Bank of Indore\")]),\n                                _c(\"option\", [_vm._v(\"State Bank of Mysore\")]),\n                                _c(\"option\", [_vm._v(\"State Bank of Patiala\")]),\n                                _c(\"option\", [\n                                  _vm._v(\"State Bank of Travancore\")\n                                ]),\n                                _c(\"option\", [\n                                  _vm._v(\"State Bank of Bikaner and Jaipur\")\n                                ]),\n                                _c(\"option\", [\n                                  _vm._v(\"State Bank of Hyderabad\")\n                                ]),\n                                _c(\"option\", [\n                                  _vm._v(\"State Bank of Saurashtra\")\n                                ]),\n                                _c(\"option\", [_vm._v(\"South Indian Bank\")]),\n                                _c(\"option\", [_vm._v(\"Syndicate Bank\")]),\n                                _c(\"option\", [_vm._v(\"UCO Bank\")]),\n                                _c(\"option\", [_vm._v(\"UTI Bank\")]),\n                                _c(\"option\", [_vm._v(\"Union Bank of India\")]),\n                                _c(\"option\", [_vm._v(\"United Bank of India\")]),\n                                _c(\"option\", [_vm._v(\"United Western Bank\")]),\n                                _c(\"option\", [_vm._v(\"Vijaya Bank\")]),\n                                _c(\"option\", [_vm._v(\"Yes Bank\")])\n                              ]\n                            ),\n                            _c(\n                              \"div\",\n                              {\n                                directives: [\n                                  {\n                                    name: \"show\",\n                                    rawName: \"v-show\",\n                                    value: _vm.errors.has(\"Bank name\"),\n                                    expression: \"errors.has('Bank name')\"\n                                  }\n                                ]\n                              },\n                              [\n                                _vm._v(\n                                  _vm._s(\n                                    _vm.errors.first(\"Account holder name\")\n                                  )\n                                )\n                              ]\n                            )\n                          ]\n                        )\n                      ])\n                    ]),\n                    _c(\"div\", { staticClass: \"col-sm-6\" }, [\n                      _c(\n                        \"div\",\n                        { staticClass: \"form-group custrespformgrop\" },\n                        [\n                          _c(\"label\", { staticClass: \"lblcustm\" }, [\n                            _vm._v(\"IFSC \")\n                          ]),\n                          _c(\"p\", [\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model.trim\",\n                                  value: _vm.property.IFSC,\n                                  expression: \"property.IFSC\",\n                                  modifiers: { trim: true }\n                                },\n                                {\n                                  name: \"validate\",\n                                  rawName: \"v-validate\",\n                                  value: \"required|matchIFSC\",\n                                  expression: \"'required|matchIFSC'\"\n                                }\n                              ],\n                              staticClass: \"form-control step_2\",\n                              class: { invalid: _vm.errors.has(\"IFSC\") },\n                              attrs: {\n                                \"data-vv-validate-on\": \"blur\",\n                                name: \"IFSC\",\n                                type: \"text\"\n                              },\n                              domProps: { value: _vm.property.IFSC },\n                              on: {\n                                input: function($event) {\n                                  if ($event.target.composing) {\n                                    return\n                                  }\n                                  _vm.$set(\n                                    _vm.property,\n                                    \"IFSC\",\n                                    $event.target.value.trim()\n                                  )\n                                },\n                                blur: function($event) {\n                                  _vm.$forceUpdate()\n                                }\n                              }\n                            }),\n                            _c(\n                              \"span\",\n                              {\n                                directives: [\n                                  {\n                                    name: \"show\",\n                                    rawName: \"v-show\",\n                                    value: _vm.errors.has(\"IFSC\"),\n                                    expression: \"errors.has('IFSC')\"\n                                  }\n                                ],\n                                staticClass: \"errormsg\"\n                              },\n                              [_vm._v(_vm._s(_vm.errors.first(\"IFSC\")))]\n                            )\n                          ])\n                        ]\n                      )\n                    ]),\n                    _c(\"div\", { staticClass: \"row marzero0\" }, [\n                      _c(\"div\", { staticClass: \"col-sm-6\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group custrespformgrop\" },\n                          [\n                            _c(\"label\", { staticClass: \"lblcustm\" }, [\n                              _vm._v(\"Account number :\")\n                            ]),\n                            _c(\"p\", [\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model.trim\",\n                                    value: _vm.property.Account_number,\n                                    expression: \"property.Account_number\",\n                                    modifiers: { trim: true }\n                                  },\n                                  {\n                                    name: \"validate\",\n                                    rawName: \"v-validate\",\n                                    value:\n                                      \"required|numeric|matchaccno|matchaccdig\",\n                                    expression:\n                                      \"'required|numeric|matchaccno|matchaccdig'\"\n                                  }\n                                ],\n                                staticClass: \"form-control step_2\",\n                                class: {\n                                  invalid: _vm.errors.has(\"Account number\")\n                                },\n                                attrs: {\n                                  \"data-vv-validate-on\": \"blur\",\n                                  name: \"Account number\",\n                                  type: \"text\"\n                                },\n                                domProps: {\n                                  value: _vm.property.Account_number\n                                },\n                                on: {\n                                  input: function($event) {\n                                    if ($event.target.composing) {\n                                      return\n                                    }\n                                    _vm.$set(\n                                      _vm.property,\n                                      \"Account_number\",\n                                      $event.target.value.trim()\n                                    )\n                                  },\n                                  blur: function($event) {\n                                    _vm.$forceUpdate()\n                                  }\n                                }\n                              }),\n                              _c(\n                                \"span\",\n                                {\n                                  directives: [\n                                    {\n                                      name: \"show\",\n                                      rawName: \"v-show\",\n                                      value: _vm.errors.has(\"Account number\"),\n                                      expression: \"errors.has('Account number')\"\n                                    }\n                                  ],\n                                  staticClass: \"errormsg\"\n                                },\n                                [\n                                  _vm._v(\n                                    _vm._s(_vm.errors.first(\"Account number\"))\n                                  )\n                                ]\n                              )\n                            ])\n                          ]\n                        )\n                      ]),\n                      _c(\"div\", { staticClass: \"col-sm-6\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group custrespformgrop\" },\n                          [\n                            _c(\"label\", { staticClass: \"lblcustm\" }, [\n                              _vm._v(\"Retypeaccountnumber :\")\n                            ]),\n                            _c(\"p\", [\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"validate\",\n                                    rawName: \"v-validate\",\n                                    value: {\n                                      required: true,\n                                      is: _vm.property.Account_number\n                                    },\n                                    expression:\n                                      \"{ required:true , is: property.Account_number }\"\n                                  }\n                                ],\n                                staticClass: \"form-control step_2\",\n                                class: {\n                                  invalid: _vm.errors.has(\"Retypeaccountnumber\")\n                                },\n                                attrs: {\n                                  \"data-vv-validate-on\": \"blur\",\n                                  name: \"Retypeaccountnumber\",\n                                  type: \"text\"\n                                }\n                              }),\n                              _c(\n                                \"span\",\n                                {\n                                  directives: [\n                                    {\n                                      name: \"show\",\n                                      rawName: \"v-show\",\n                                      value: _vm.errors.has(\n                                        \"Retypeaccountnumber\"\n                                      ),\n                                      expression:\n                                        \"errors.has('Retypeaccountnumber')\"\n                                    }\n                                  ],\n                                  staticClass: \"errormsg\"\n                                },\n                                [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.errors.first(\"Retypeaccountnumber\")\n                                    )\n                                  )\n                                ]\n                              )\n                            ])\n                          ]\n                        )\n                      ])\n                    ]),\n                    _c(\"div\", { staticClass: \"row marzero0\" }, [\n                      _c(\"div\", { staticClass: \"col-sm-6\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group custrespformgrop\" },\n                          [\n                            _c(\"label\", { staticClass: \"lblcustm\" }, [\n                              _vm._v(\"Landlord city :\")\n                            ]),\n                            _c(\"p\", [\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model.trim\",\n                                    value: _vm.property.Landlord_city,\n                                    expression: \"property.Landlord_city\",\n                                    modifiers: { trim: true }\n                                  },\n                                  {\n                                    name: \"validate\",\n                                    rawName: \"v-validate\",\n                                    value: {\n                                      required: true,\n                                      regex: /^[A-z0-9\\s\\-\\/]+$/\n                                    },\n                                    expression:\n                                      \"{ required:true , regex:/^[A-z0-9\\\\s\\\\-\\\\/]+$/ }\"\n                                  }\n                                ],\n                                staticClass: \"form-control step_2\",\n                                class: {\n                                  invalid: _vm.errors.has(\"Landlord city\")\n                                },\n                                attrs: {\n                                  \"data-vv-validate-on\": \"blur\",\n                                  name: \"Landlord city\",\n                                  type: \"text\"\n                                },\n                                domProps: { value: _vm.property.Landlord_city },\n                                on: {\n                                  input: function($event) {\n                                    if ($event.target.composing) {\n                                      return\n                                    }\n                                    _vm.$set(\n                                      _vm.property,\n                                      \"Landlord_city\",\n                                      $event.target.value.trim()\n                                    )\n                                  },\n                                  blur: function($event) {\n                                    _vm.$forceUpdate()\n                                  }\n                                }\n                              }),\n                              _c(\n                                \"span\",\n                                {\n                                  directives: [\n                                    {\n                                      name: \"show\",\n                                      rawName: \"v-show\",\n                                      value: _vm.errors.has(\"Landlord city\"),\n                                      expression: \"errors.has('Landlord city')\"\n                                    }\n                                  ],\n                                  staticClass: \"errormsg\"\n                                },\n                                [\n                                  _vm._v(\n                                    _vm._s(_vm.errors.first(\"Landlord city\"))\n                                  )\n                                ]\n                              )\n                            ])\n                          ]\n                        )\n                      ]),\n                      _c(\"div\", { staticClass: \"col-sm-6\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group custrespformgrop\" },\n                          [\n                            _c(\"label\", { staticClass: \"lblcustm\" }, [\n                              _vm._v(\"Landlord state :\")\n                            ]),\n                            _c(\"p\", [\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model.trim\",\n                                    value: _vm.property.Landlord_state,\n                                    expression: \"property.Landlord_state\",\n                                    modifiers: { trim: true }\n                                  },\n                                  {\n                                    name: \"validate\",\n                                    rawName: \"v-validate\",\n                                    value: {\n                                      required: true,\n                                      regex: /^[A-z0-9\\s\\-\\/]+$/\n                                    },\n                                    expression:\n                                      \"{ required:true , regex:/^[A-z0-9\\\\s\\\\-\\\\/]+$/ }\"\n                                  }\n                                ],\n                                staticClass: \"form-control step_2\",\n                                class: {\n                                  invalid: _vm.errors.has(\"Landlord state\")\n                                },\n                                attrs: {\n                                  \"data-vv-validate-on\": \"blur\",\n                                  name: \"Landlord state\",\n                                  type: \"text\"\n                                },\n                                domProps: {\n                                  value: _vm.property.Landlord_state\n                                },\n                                on: {\n                                  input: function($event) {\n                                    if ($event.target.composing) {\n                                      return\n                                    }\n                                    _vm.$set(\n                                      _vm.property,\n                                      \"Landlord_state\",\n                                      $event.target.value.trim()\n                                    )\n                                  },\n                                  blur: function($event) {\n                                    _vm.$forceUpdate()\n                                  }\n                                }\n                              }),\n                              _c(\n                                \"span\",\n                                {\n                                  directives: [\n                                    {\n                                      name: \"show\",\n                                      rawName: \"v-show\",\n                                      value: _vm.errors.has(\"Landlord state\"),\n                                      expression: \"errors.has('Landlord state')\"\n                                    }\n                                  ],\n                                  staticClass: \"errormsg\"\n                                },\n                                [\n                                  _vm._v(\n                                    _vm._s(_vm.errors.first(\"Landlord state\"))\n                                  )\n                                ]\n                              )\n                            ])\n                          ]\n                        )\n                      ])\n                    ]),\n                    _c(\"div\", { staticClass: \"row marzero0\" }, [\n                      _c(\"div\", { staticClass: \"col-sm-6\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group custrespformgrop\" },\n                          [\n                            _c(\"label\", { staticClass: \"lblcustm\" }, [\n                              _vm._v(\"Landlord PAN number :\")\n                            ]),\n                            _c(\"p\", [\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model.trim\",\n                                    value: _vm.property.Landlord_PAN_number,\n                                    expression: \"property.Landlord_PAN_number\",\n                                    modifiers: { trim: true }\n                                  },\n                                  {\n                                    name: \"validate\",\n                                    rawName: \"v-validate\",\n                                    value: {\n                                      regex: /[A-Z]{5}[0-9]{4}[A-Z]{1}/\n                                    },\n                                    expression:\n                                      \"{ regex:/[A-Z]{5}[0-9]{4}[A-Z]{1}/ }\"\n                                  }\n                                ],\n                                staticClass: \"form-control step_2\",\n                                class: {\n                                  invalid: _vm.errors.has(\"Landlord PAN number\")\n                                },\n                                attrs: {\n                                  \"data-vv-validate-on\": \"blur\",\n                                  name: \"Landlord PAN number\",\n                                  type: \"text\"\n                                },\n                                domProps: {\n                                  value: _vm.property.Landlord_PAN_number\n                                },\n                                on: {\n                                  input: function($event) {\n                                    if ($event.target.composing) {\n                                      return\n                                    }\n                                    _vm.$set(\n                                      _vm.property,\n                                      \"Landlord_PAN_number\",\n                                      $event.target.value.trim()\n                                    )\n                                  },\n                                  blur: function($event) {\n                                    _vm.$forceUpdate()\n                                  }\n                                }\n                              }),\n                              _c(\n                                \"span\",\n                                {\n                                  directives: [\n                                    {\n                                      name: \"show\",\n                                      rawName: \"v-show\",\n                                      value: _vm.errors.has(\n                                        \"Landlord PAN number\"\n                                      ),\n                                      expression:\n                                        \"errors.has('Landlord PAN number')\"\n                                    }\n                                  ],\n                                  staticClass: \"errormsg\"\n                                },\n                                [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.errors.first(\"Landlord PAN number\")\n                                    )\n                                  )\n                                ]\n                              )\n                            ])\n                          ]\n                        )\n                      ])\n                    ]),\n                    _c(\"div\", { staticClass: \"row marzero0\" }, [\n                      _c(\"div\", { staticClass: \"col-sm-6\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group custrespformgrop\" },\n                          [\n                            _c(\"label\", { staticClass: \"lblcustm\" }, [\n                              _vm._v(\"Upload landlord PAN :\")\n                            ]),\n                            _c(\"div\", { staticClass: \"file-drop-area\" }, [\n                              _vm._m(8),\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"validate\",\n                                    rawName: \"v-validate\",\n                                    value: \"required\",\n                                    expression: \"'required'\"\n                                  }\n                                ],\n                                staticClass: \"file-input\",\n                                attrs: {\n                                  name: \"Landlord PAN doc\",\n                                  type: \"file\"\n                                },\n                                on: { change: _vm.onFileChange }\n                              })\n                            ]),\n                            _c(\"small\", [\n                              _vm._v(\n                                \"jpg/png/pdf files with a size less than 500kb\"\n                              )\n                            ]),\n                            _c(\n                              \"div\",\n                              {\n                                directives: [\n                                  {\n                                    name: \"show\",\n                                    rawName: \"v-show\",\n                                    value: _vm.imageUpload2 === 1,\n                                    expression: \"imageUpload2===1\"\n                                  }\n                                ]\n                              },\n                              [_c(\"small\", [_vm._v(\"File Uploaded\")])]\n                            ),\n                            _c(\n                              \"div\",\n                              {\n                                directives: [\n                                  {\n                                    name: \"show\",\n                                    rawName: \"v-show\",\n                                    value: _vm.filevalid == false,\n                                    expression: \"filevalid==false\"\n                                  }\n                                ],\n                                staticClass: \"errormsg\"\n                              },\n                              [\n                                _c(\"b\", [\n                                  _vm._v(\n                                    \"File uploaded has exceeded size limit \"\n                                  )\n                                ])\n                              ]\n                            ),\n                            _c(\n                              \"div\",\n                              {\n                                directives: [\n                                  {\n                                    name: \"show\",\n                                    rawName: \"v-show\",\n                                    value: _vm.filevalid_format == false,\n                                    expression: \"filevalid_format==false\"\n                                  }\n                                ],\n                                staticClass: \"errormsg\"\n                              },\n                              [\n                                _c(\"b\", [\n                                  _vm._v(\n                                    \"File uploaded is not of the format jpg/png/pdf/jpeg\"\n                                  )\n                                ])\n                              ]\n                            )\n                          ]\n                        )\n                      ])\n                    ]),\n                    _c(\"div\", { staticClass: \"row marzero0\" }, [\n                      _c(\n                        \"label\",\n                        {\n                          staticClass: \"lblcustm\",\n                          staticStyle: { margin: \"0px 15px\" }\n                        },\n                        [_vm._v(\"Maintenance Account Details :\")]\n                      ),\n                      _c(\"div\", { staticClass: \"col-sm-12\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group custrespformgrop\" },\n                          [\n                            _c(\"label\", { staticClass: \"lblcustm\" }, [\n                              _vm._v(\"Same as landlord account details?\")\n                            ]),\n                            _c(\"input\", {\n                              attrs: {\n                                type: \"radio\",\n                                id: \"option1\",\n                                name: \"Msame\",\n                                value: \"Yes\"\n                              },\n                              on: { click: _vm.submit3 }\n                            }),\n                            _vm._m(9),\n                            _c(\"input\", {\n                              attrs: {\n                                type: \"radio\",\n                                id: \"option2\",\n                                name: \"Msame\",\n                                value: \"No\"\n                              },\n                              on: { click: _vm.submit4 }\n                            }),\n                            _vm._m(10)\n                          ]\n                        )\n                      ])\n                    ]),\n                    _c(\n                      \"div\",\n                      {\n                        directives: [\n                          {\n                            name: \"show\",\n                            rawName: \"v-show\",\n                            value: _vm.M_same_l == 0,\n                            expression: \"M_same_l==0\"\n                          }\n                        ]\n                      },\n                      [\n                        _c(\"div\", { staticClass: \"row marzero0\" }, [\n                          _c(\"div\", { staticClass: \"col-sm-6\" }, [\n                            _c(\n                              \"div\",\n                              { staticClass: \"form-group custrespformgrop\" },\n                              [\n                                _c(\"label\", { staticClass: \"lblcustm\" }, [\n                                  _vm._v(\"Account holder name :\")\n                                ]),\n                                _c(\"p\", [\n                                  _c(\"input\", {\n                                    directives: [\n                                      {\n                                        name: \"model\",\n                                        rawName: \"v-model.trim\",\n                                        value:\n                                          _vm.property.M_Account_holder_name,\n                                        expression:\n                                          \"property.M_Account_holder_name\",\n                                        modifiers: { trim: true }\n                                      },\n                                      {\n                                        name: \"validate\",\n                                        rawName: \"v-validate\",\n                                        value: {\n                                          required: true,\n                                          regex: /^[A-z\\s]+$/\n                                        },\n                                        expression:\n                                          \"{ required:true , regex:/^[A-z\\\\s]+$/ }\"\n                                      }\n                                    ],\n                                    staticClass: \"form-control step_4\",\n                                    class: {\n                                      invalid: _vm.errors.has(\n                                        \"M_Account holder name\"\n                                      )\n                                    },\n                                    attrs: {\n                                      \"data-vv-validate-on\": \"blur\",\n                                      name: \"M_Account holder name\",\n                                      type: \"text\"\n                                    },\n                                    domProps: {\n                                      value: _vm.property.M_Account_holder_name\n                                    },\n                                    on: {\n                                      input: function($event) {\n                                        if ($event.target.composing) {\n                                          return\n                                        }\n                                        _vm.$set(\n                                          _vm.property,\n                                          \"M_Account_holder_name\",\n                                          $event.target.value.trim()\n                                        )\n                                      },\n                                      blur: function($event) {\n                                        _vm.$forceUpdate()\n                                      }\n                                    }\n                                  }),\n                                  _c(\n                                    \"span\",\n                                    {\n                                      directives: [\n                                        {\n                                          name: \"show\",\n                                          rawName: \"v-show\",\n                                          value: _vm.errors.has(\n                                            \"M_Account holder name\"\n                                          ),\n                                          expression:\n                                            \"errors.has('M_Account holder name')\"\n                                        }\n                                      ],\n                                      staticClass: \"errormsg\"\n                                    },\n                                    [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm.errors.first(\n                                            \"M_Account holder name\"\n                                          )\n                                        )\n                                      )\n                                    ]\n                                  )\n                                ])\n                              ]\n                            )\n                          ])\n                        ]),\n                        _c(\"div\", { staticClass: \"row marzero0\" }, [\n                          _c(\"div\", { staticClass: \"col-sm-6\" }, [\n                            _c(\n                              \"div\",\n                              { staticClass: \"form-group custrespformgrop\" },\n                              [\n                                _c(\"label\", { staticClass: \"lblcustm\" }, [\n                                  _vm._v(\"Bank name :\")\n                                ]),\n                                _c(\n                                  \"select\",\n                                  {\n                                    directives: [\n                                      {\n                                        name: \"model\",\n                                        rawName: \"v-model.trim\",\n                                        value: _vm.property.M_Bank_name,\n                                        expression: \"property.M_Bank_name\",\n                                        modifiers: { trim: true }\n                                      }\n                                    ],\n                                    staticClass: \"form-control step_4\",\n                                    class: {\n                                      invalid: _vm.errors.has(\"Bank name\")\n                                    },\n                                    attrs: { name: \"M_Bank name\", id: \"sel1\" },\n                                    on: {\n                                      change: function($event) {\n                                        var $$selectedVal = Array.prototype.filter\n                                          .call($event.target.options, function(\n                                            o\n                                          ) {\n                                            return o.selected\n                                          })\n                                          .map(function(o) {\n                                            var val =\n                                              \"_value\" in o ? o._value : o.value\n                                            return val\n                                          })\n                                        _vm.$set(\n                                          _vm.property,\n                                          \"M_Bank_name\",\n                                          $event.target.multiple\n                                            ? $$selectedVal\n                                            : $$selectedVal[0]\n                                        )\n                                      }\n                                    }\n                                  },\n                                  [\n                                    _c(\"option\", [_vm._v(\"Allahabad Bank\")]),\n                                    _c(\"option\", [_vm._v(\"Andhra Bank\")]),\n                                    _c(\"option\", [_vm._v(\"Axis Bank\")]),\n                                    _c(\"option\", [_vm._v(\"Bank of Baroda\")]),\n                                    _c(\"option\", [_vm._v(\"Bank of India\")]),\n                                    _c(\"option\", [\n                                      _vm._v(\"Bank of Maharashtra\")\n                                    ]),\n                                    _c(\"option\", [_vm._v(\"Bank of Punjab\")]),\n                                    _c(\"option\", [_vm._v(\"Bank of Rajasthan\")]),\n                                    _c(\"option\", [_vm._v(\"BNP Paribas\")]),\n                                    _c(\"option\", [_vm._v('Canara Bank\"')]),\n                                    _c(\"option\", [\n                                      _vm._v(\"Central Bank of India\")\n                                    ]),\n                                    _c(\"option\", [_vm._v(\"Centurion Ban\")]),\n                                    _c(\"option\", [_vm._v(\"Corporation Bank\")]),\n                                    _c(\"option\", [_vm._v(\"Citi Bank\")]),\n                                    _c(\"option\", [_vm._v(\"City Union Bank\")]),\n                                    _c(\"option\", [\n                                      _vm._v(\"Catholic Syrian Bank\")\n                                    ]),\n                                    _c(\"option\", [_vm._v(\"DCB Bank\")]),\n                                    _c(\"option\", [\n                                      _vm._v(\"Development Credit Bank\")\n                                    ]),\n                                    _c(\"option\", [_vm._v(\"Deutsche Bank AG\")]),\n                                    _c(\"option\", [_vm._v(\"Dhanlakshmi Bank\")]),\n                                    _c(\"option\", [_vm._v(\"Dena Bank\")]),\n                                    _c(\"option\", [_vm._v(\"Federal Bank\")]),\n                                    _c(\"option\", [_vm._v(\"HDFC Bank\")]),\n                                    _c(\"option\", [_vm._v(\"HSBC Bank\")]),\n                                    _c(\"option\", [_vm._v(\"ICICI Bank\")]),\n                                    _c(\"option\", [_vm._v(\"IDBI Bank\")]),\n                                    _c(\"option\", [_vm._v(\"Indian Bank\")]),\n                                    _c(\"option\", [\n                                      _vm._v(\"Indian Overseas Bank\")\n                                    ]),\n                                    _c(\"option\", [_vm._v(\"IndusInd Bank\")]),\n                                    _c(\"option\", [_vm._v(\"ING Vysya Bank\")]),\n                                    _c(\"option\", [\n                                      _vm._v(\"Jammu & Kashmir Bank\")\n                                    ]),\n                                    _c(\"option\", [_vm._v(\"Karnataka Bank\")]),\n                                    _c(\"option\", [\n                                      _vm._v(\"Kotak Mahindra Bank\")\n                                    ]),\n                                    _c(\"option\", [_vm._v(\"Karur Vysya Bank\")]),\n                                    _c(\"option\", [\n                                      _vm._v(\"Lakshmi Vilas Bank\")\n                                    ]),\n                                    _c(\"option\", [\n                                      _vm._v(\"NKGSB Co-operative Bank Ltd\")\n                                    ]),\n                                    _c(\"option\", [\n                                      _vm._v(\"Oriental Bank of Commerce\")\n                                    ]),\n                                    _c(\"option\", [_vm._v(\"PunjabSind Bank\")]),\n                                    _c(\"option\", [\n                                      _vm._v(\"Punjab National Bank\")\n                                    ]),\n                                    _c(\"option\", [\n                                      _vm._v(\"Standard Chartered Bank\")\n                                    ]),\n                                    _c(\"option\", [\n                                      _vm._v(\"State Bank of India\")\n                                    ]),\n                                    _c(\"option\", [\n                                      _vm._v(\"State Bank of Indore\")\n                                    ]),\n                                    _c(\"option\", [\n                                      _vm._v(\"State Bank of Mysore\")\n                                    ]),\n                                    _c(\"option\", [\n                                      _vm._v(\"State Bank of Patiala\")\n                                    ]),\n                                    _c(\"option\", [\n                                      _vm._v(\"State Bank of Travancore\")\n                                    ]),\n                                    _c(\"option\", [\n                                      _vm._v(\"State Bank of Bikaner and Jaipur\")\n                                    ]),\n                                    _c(\"option\", [\n                                      _vm._v(\"State Bank of Hyderabad\")\n                                    ]),\n                                    _c(\"option\", [\n                                      _vm._v(\"State Bank of Saurashtra\")\n                                    ]),\n                                    _c(\"option\", [_vm._v(\"South Indian Bank\")]),\n                                    _c(\"option\", [_vm._v(\"Syndicate Bank\")]),\n                                    _c(\"option\", [_vm._v(\"UCO Bank\")]),\n                                    _c(\"option\", [_vm._v(\"UTI Bank\")]),\n                                    _c(\"option\", [\n                                      _vm._v(\"Union Bank of India\")\n                                    ]),\n                                    _c(\"option\", [\n                                      _vm._v(\"United Bank of India\")\n                                    ]),\n                                    _c(\"option\", [\n                                      _vm._v(\"United Western Bank\")\n                                    ]),\n                                    _c(\"option\", [_vm._v(\"Vijaya Bank\")]),\n                                    _c(\"option\", [_vm._v(\"Yes Bank\")])\n                                  ]\n                                ),\n                                _c(\n                                  \"div\",\n                                  {\n                                    directives: [\n                                      {\n                                        name: \"show\",\n                                        rawName: \"v-show\",\n                                        value: _vm.errors.has(\"M_Bank name\"),\n                                        expression: \"errors.has('M_Bank name')\"\n                                      }\n                                    ]\n                                  },\n                                  [\n                                    _vm._v(\n                                      _vm._s(\n                                        _vm.errors.first(\"Account holder name\")\n                                      )\n                                    )\n                                  ]\n                                )\n                              ]\n                            )\n                          ])\n                        ]),\n                        _c(\"div\", { staticClass: \"col-sm-6\" }, [\n                          _c(\n                            \"div\",\n                            { staticClass: \"form-group custrespformgrop\" },\n                            [\n                              _c(\"label\", { staticClass: \"lblcustm\" }, [\n                                _vm._v(\"IFSC \")\n                              ]),\n                              _c(\"p\", [\n                                _c(\"input\", {\n                                  directives: [\n                                    {\n                                      name: \"model\",\n                                      rawName: \"v-model.trim\",\n                                      value: _vm.property.M_IFSC,\n                                      expression: \"property.M_IFSC\",\n                                      modifiers: { trim: true }\n                                    },\n                                    {\n                                      name: \"validate\",\n                                      rawName: \"v-validate\",\n                                      value: \"required|M_matchIFSC\",\n                                      expression: \"'required|M_matchIFSC'\"\n                                    }\n                                  ],\n                                  staticClass: \"form-control step_4\",\n                                  class: { invalid: _vm.errors.has(\"M_IFSC\") },\n                                  attrs: {\n                                    \"data-vv-validate-on\": \"blur\",\n                                    name: \"M_IFSC\",\n                                    type: \"text\"\n                                  },\n                                  domProps: { value: _vm.property.M_IFSC },\n                                  on: {\n                                    input: function($event) {\n                                      if ($event.target.composing) {\n                                        return\n                                      }\n                                      _vm.$set(\n                                        _vm.property,\n                                        \"M_IFSC\",\n                                        $event.target.value.trim()\n                                      )\n                                    },\n                                    blur: function($event) {\n                                      _vm.$forceUpdate()\n                                    }\n                                  }\n                                }),\n                                _c(\n                                  \"span\",\n                                  {\n                                    directives: [\n                                      {\n                                        name: \"show\",\n                                        rawName: \"v-show\",\n                                        value: _vm.errors.has(\"M_IFSC\"),\n                                        expression: \"errors.has('M_IFSC')\"\n                                      }\n                                    ],\n                                    staticClass: \"errormsg\"\n                                  },\n                                  [_vm._v(_vm._s(_vm.errors.first(\"M_IFSC\")))]\n                                )\n                              ])\n                            ]\n                          )\n                        ]),\n                        _c(\"div\", { staticClass: \"row marzero0\" }, [\n                          _c(\"div\", { staticClass: \"col-sm-6\" }, [\n                            _c(\n                              \"div\",\n                              { staticClass: \"form-group custrespformgrop\" },\n                              [\n                                _c(\"label\", { staticClass: \"lblcustm\" }, [\n                                  _vm._v(\"Account number :\")\n                                ]),\n                                _c(\"p\", [\n                                  _c(\"input\", {\n                                    directives: [\n                                      {\n                                        name: \"model\",\n                                        rawName: \"v-model.trim\",\n                                        value: _vm.property.M_Account_number,\n                                        expression: \"property.M_Account_number\",\n                                        modifiers: { trim: true }\n                                      },\n                                      {\n                                        name: \"validate\",\n                                        rawName: \"v-validate\",\n                                        value:\n                                          \"required|numeric|M_matchaccno|M_matchaccdig\",\n                                        expression:\n                                          \"'required|numeric|M_matchaccno|M_matchaccdig'\"\n                                      }\n                                    ],\n                                    staticClass: \"form-control step_4\",\n                                    class: {\n                                      invalid: _vm.errors.has(\n                                        \"M_Account number\"\n                                      )\n                                    },\n                                    attrs: {\n                                      \"data-vv-validate-on\": \"blur\",\n                                      name: \"M_Account number\",\n                                      type: \"text\"\n                                    },\n                                    domProps: {\n                                      value: _vm.property.M_Account_number\n                                    },\n                                    on: {\n                                      input: function($event) {\n                                        if ($event.target.composing) {\n                                          return\n                                        }\n                                        _vm.$set(\n                                          _vm.property,\n                                          \"M_Account_number\",\n                                          $event.target.value.trim()\n                                        )\n                                      },\n                                      blur: function($event) {\n                                        _vm.$forceUpdate()\n                                      }\n                                    }\n                                  }),\n                                  _c(\n                                    \"span\",\n                                    {\n                                      directives: [\n                                        {\n                                          name: \"show\",\n                                          rawName: \"v-show\",\n                                          value: _vm.errors.has(\n                                            \"M_Account number\"\n                                          ),\n                                          expression:\n                                            \"errors.has('M_Account number')\"\n                                        }\n                                      ],\n                                      staticClass: \"errormsg\"\n                                    },\n                                    [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm.errors.first(\"M_Account number\")\n                                        )\n                                      )\n                                    ]\n                                  )\n                                ])\n                              ]\n                            )\n                          ]),\n                          _c(\"div\", { staticClass: \"col-sm-6\" }, [\n                            _c(\n                              \"div\",\n                              { staticClass: \"form-group custrespformgrop\" },\n                              [\n                                _c(\"label\", { staticClass: \"lblcustm\" }, [\n                                  _vm._v(\"Retypeaccountnumber :\")\n                                ]),\n                                _c(\"p\", [\n                                  _c(\"input\", {\n                                    directives: [\n                                      {\n                                        name: \"validate\",\n                                        rawName: \"v-validate\",\n                                        value: {\n                                          required: true,\n                                          is: _vm.property.M_Account_number\n                                        },\n                                        expression:\n                                          \"{ required:true , is: property.M_Account_number }\"\n                                      }\n                                    ],\n                                    staticClass: \"form-control step_4\",\n                                    class: {\n                                      invalid: _vm.errors.has(\n                                        \"M_Retypeaccountnumber\"\n                                      )\n                                    },\n                                    attrs: {\n                                      \"data-vv-validate-on\": \"blur\",\n                                      name: \"M_Retypeaccountnumber\",\n                                      type: \"text\"\n                                    }\n                                  }),\n                                  _c(\n                                    \"span\",\n                                    {\n                                      directives: [\n                                        {\n                                          name: \"show\",\n                                          rawName: \"v-show\",\n                                          value: _vm.errors.has(\n                                            \"M_Retypeaccountnumber\"\n                                          ),\n                                          expression:\n                                            \"errors.has('M_Retypeaccountnumber')\"\n                                        }\n                                      ],\n                                      staticClass: \"errormsg\"\n                                    },\n                                    [\n                                      _vm._v(\n                                        _vm._s(\n                                          _vm.errors.first(\n                                            \"M_Retypeaccountnumber\"\n                                          )\n                                        )\n                                      )\n                                    ]\n                                  )\n                                ])\n                              ]\n                            )\n                          ])\n                        ])\n                      ]\n                    ),\n                    _vm._m(11)\n                  ])\n                ]\n              )\n            ]\n          ),\n          _c(\"hr\", { staticStyle: { \"border-color\": \"#EEEEEE\" } }),\n          _c(\n            \"p\",\n            {\n              staticStyle: {\n                \"font-size\": \"12px\",\n                color: \"#B0BEC5\",\n                \"text-align\": \"center\"\n              }\n            },\n            [_vm._v(\"© Copyright 2015-2018 Paymatrix. All Rights Reserved.\")]\n          )\n        ])\n      ]\n    ),\n    _c(\n      \"div\",\n      {\n        directives: [\n          {\n            name: \"show\",\n            rawName: \"v-show\",\n            value: _vm.step === 3,\n            expression: \"step===3\"\n          }\n        ],\n        attrs: { id: \"form3\" }\n      },\n      [\n        _vm._m(12),\n        _c(\"div\", { staticClass: \"mainfomlayout\" }, [\n          _vm._m(13),\n          _c(\"hr\", { staticStyle: { \"border-color\": \"#EEEEEE\" } }),\n          _c(\"a\", { staticClass: \"custback\", on: { click: _vm.back } }, [\n            _c(\"i\", { staticClass: \"fas fa-chevron-left\" }),\n            _vm._v(\" Back\")\n          ]),\n          _c(\n            \"div\",\n            {\n              staticClass: \"row\",\n              staticStyle: {\n                \"margin-top\": \"10px\",\n                \"font-family\": \"'Roboto', sans-serif\"\n              }\n            },\n            [\n              _c(\n                \"form\",\n                {\n                  staticClass: \" \",\n                  on: {\n                    submit: function($event) {\n                      $event.preventDefault()\n                      return _vm.sendDatas($event)\n                    }\n                  }\n                },\n                [\n                  _c(\"div\", { staticClass: \"hrafom3\" }, [\n                    _c(\"h4\", { staticStyle: { margin: \"0px 5px 20px\" } }, [\n                      _vm._v(\"Share your rent agreement with us\")\n                    ]),\n                    _c(\"div\", { staticClass: \"row marzero0\" }, [\n                      _c(\"div\", { staticClass: \"col-sm-12\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group custrespformgrop\" },\n                          [\n                            _c(\"label\", { staticClass: \"lblcustm\" }, [\n                              _vm._v(\"Start date of an agreement :\")\n                            ]),\n                            _c(\"p\", [\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model.trim\",\n                                    value: _vm.property.startdate_agreement,\n                                    expression: \"property.startdate_agreement\",\n                                    modifiers: { trim: true }\n                                  },\n                                  {\n                                    name: \"validate\",\n                                    rawName: \"v-validate\",\n                                    value: \"required|date_format:DD/MM/YYYY\",\n                                    expression:\n                                      \"'required|date_format:DD/MM/YYYY'\"\n                                  }\n                                ],\n                                ref: \"startdate\",\n                                staticClass: \"form-control step_3\",\n                                attrs: {\n                                  \"data-vv-validate-on\": \"blur\",\n                                  name: \"startdate agreement\",\n                                  type: \"date\"\n                                },\n                                domProps: {\n                                  value: _vm.property.startdate_agreement\n                                },\n                                on: {\n                                  input: function($event) {\n                                    if ($event.target.composing) {\n                                      return\n                                    }\n                                    _vm.$set(\n                                      _vm.property,\n                                      \"startdate_agreement\",\n                                      $event.target.value.trim()\n                                    )\n                                  },\n                                  blur: function($event) {\n                                    _vm.$forceUpdate()\n                                  }\n                                }\n                              }),\n                              _c(\n                                \"span\",\n                                {\n                                  directives: [\n                                    {\n                                      name: \"show\",\n                                      rawName: \"v-show\",\n                                      value: _vm.errors.has(\n                                        \"startdate agreement\"\n                                      ),\n                                      expression:\n                                        \"errors.has('startdate agreement')\"\n                                    }\n                                  ],\n                                  staticClass: \"errormsg\"\n                                },\n                                [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.errors.first(\"startdate agreement\")\n                                    )\n                                  )\n                                ]\n                              )\n                            ])\n                          ]\n                        )\n                      ])\n                    ]),\n                    _c(\"div\", { staticClass: \"row marzero0\" }, [\n                      _c(\"div\", { staticClass: \"col-sm-12\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group custrespformgrop\" },\n                          [\n                            _c(\"label\", { staticClass: \"lblcustm\" }, [\n                              _vm._v(\"End date of an agreement :\")\n                            ]),\n                            _c(\"p\", [\n                              _c(\"input\", {\n                                directives: [\n                                  {\n                                    name: \"model\",\n                                    rawName: \"v-model.trim\",\n                                    value: _vm.property.enddate_agreement,\n                                    expression: \"property.enddate_agreement\",\n                                    modifiers: { trim: true }\n                                  },\n                                  {\n                                    name: \"validate\",\n                                    rawName: \"v-validate\",\n                                    value:\n                                      \"required|date_format:DD/MM/YYYY|after:startdate\",\n                                    expression:\n                                      \"'required|date_format:DD/MM/YYYY|after:startdate'\"\n                                  }\n                                ],\n                                staticClass: \"form-control step_3\",\n                                attrs: {\n                                  \"data-vv-validate-on\": \"blur\",\n                                  name: \"enddate agreement\",\n                                  type: \"date\"\n                                },\n                                domProps: {\n                                  value: _vm.property.enddate_agreement\n                                },\n                                on: {\n                                  input: function($event) {\n                                    if ($event.target.composing) {\n                                      return\n                                    }\n                                    _vm.$set(\n                                      _vm.property,\n                                      \"enddate_agreement\",\n                                      $event.target.value.trim()\n                                    )\n                                  },\n                                  blur: function($event) {\n                                    _vm.$forceUpdate()\n                                  }\n                                }\n                              }),\n                              _c(\n                                \"span\",\n                                {\n                                  directives: [\n                                    {\n                                      name: \"show\",\n                                      rawName: \"v-show\",\n                                      value: _vm.errors.has(\n                                        \"enddate agreement\"\n                                      ),\n                                      expression:\n                                        \"errors.has('enddate agreement')\"\n                                    }\n                                  ],\n                                  staticClass: \"errormsg\"\n                                },\n                                [\n                                  _vm._v(\n                                    _vm._s(\n                                      _vm.errors.first(\"enddate agreement\")\n                                    )\n                                  )\n                                ]\n                              )\n                            ])\n                          ]\n                        )\n                      ])\n                    ]),\n                    _c(\"div\", { staticClass: \"row marzero0\" }, [\n                      _c(\"div\", { staticClass: \"col-sm-12\" }, [\n                        _c(\n                          \"div\",\n                          { staticClass: \"form-group custrespformgrop\" },\n                          [\n                            _c(\"label\", { staticClass: \"lblcustm\" }, [\n                              _vm._v(\"Upload rent agreement :\")\n                            ]),\n                            _c(\"div\", { staticClass: \"file-drop-area\" }, [\n                              _vm._m(14),\n                              _c(\"input\", {\n                                staticClass: \"file-input\",\n                                attrs: { type: \"file\", required: \"\" },\n                                on: { change: _vm.onFileChange }\n                              })\n                            ]),\n                            _c(\"small\", [\n                              _vm._v(\n                                \"jpg/png/pdf files with a size less than 500kb\"\n                              )\n                            ]),\n                            _c(\n                              \"div\",\n                              {\n                                directives: [\n                                  {\n                                    name: \"show\",\n                                    rawName: \"v-show\",\n                                    value: _vm.imageUpload3 === 1,\n                                    expression: \"imageUpload3===1\"\n                                  }\n                                ]\n                              },\n                              [_vm._m(15)]\n                            ),\n                            _c(\n                              \"div\",\n                              {\n                                directives: [\n                                  {\n                                    name: \"show\",\n                                    rawName: \"v-show\",\n                                    value: _vm.filevalid == false,\n                                    expression: \"filevalid==false\"\n                                  }\n                                ],\n                                staticClass: \"errormsg\"\n                              },\n                              [\n                                _c(\"b\", [\n                                  _vm._v(\n                                    \"File uploaded has exceeded size limit \"\n                                  )\n                                ])\n                              ]\n                            ),\n                            _c(\n                              \"div\",\n                              {\n                                directives: [\n                                  {\n                                    name: \"show\",\n                                    rawName: \"v-show\",\n                                    value: _vm.filevalid_format == false,\n                                    expression: \"filevalid_format==false\"\n                                  }\n                                ],\n                                staticClass: \"errormsg\"\n                              },\n                              [\n                                _c(\"b\", [\n                                  _vm._v(\n                                    \"File uploaded is not of the format jpg/png/pdf/jpeg\"\n                                  )\n                                ])\n                              ]\n                            )\n                          ]\n                        )\n                      ])\n                    ]),\n                    _vm._m(16)\n                  ])\n                ]\n              )\n            ]\n          ),\n          _c(\"hr\", { staticStyle: { \"border-color\": \"#EEEEEE\" } }),\n          _c(\n            \"p\",\n            {\n              staticStyle: {\n                \"font-size\": \"12px\",\n                color: \"#B0BEC5\",\n                \"text-align\": \"center\"\n              }\n            },\n            [_vm._v(\"© Copyright 2015-2018 Paymatrix. All Rights Reserved.\")]\n          )\n        ])\n      ]\n    )\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", { attrs: { id: \"progressbar\" } }, [\n      _c(\"li\", { staticClass: \"active clrdarc\" }, [_vm._v(\"Property info\")]),\n      _c(\"li\", [_vm._v(\"Account details\")]),\n      _c(\"li\", [_vm._v(\"Rent agreement\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"label\", { staticClass: \"radiolabel\", attrs: { for: \"sec1\" } }, [\n      _c(\"span\", [_c(\"span\")]),\n      _vm._v(\"Yes\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"label\", { staticClass: \"radiolabel\", attrs: { for: \"sec2\" } }, [\n      _c(\"span\", [_c(\"span\")]),\n      _vm._v(\"No\")\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"span\",\n      {\n        staticClass: \"file-msg js-set-number\",\n        staticStyle: { color: \"#808080\", \"font-size\": \"16px\" }\n      },\n      [\n        _vm._v(\"Click or Drop files \"),\n        _c(\"span\", { staticStyle: { color: \"#0071bc\" } }, [_vm._v(\"here\")])\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"small\", [_c(\"p\", [_vm._v(\"File Uploaded \")])])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"div\",\n      { staticClass: \"row marzero0\", staticStyle: { \"margin-bottom\": \"20px\" } },\n      [\n        _c(\"div\", { staticClass: \"maxbtnwid \" }, [\n          _c(\"div\", { staticClass: \"col-xs-6\" }, [\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-info custbtnn\",\n                attrs: { type: \"submit\" }\n              },\n              [_vm._v(\"Save and Next\")]\n            )\n          ])\n        ])\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"mar0_15\" }, [\n      _c(\n        \"span\",\n        { staticClass: \"fonweigh700\", staticStyle: { float: \"right\" } },\n        [_c(\"a\", [_vm._v(\"X\")])]\n      ),\n      _c(\"h4\", { staticClass: \"fonweigh700\" }, [_vm._v(\"Create template\")]),\n      _c(\"hr\", { staticStyle: { \"border-color\": \"#EEEEEE\" } })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", { attrs: { id: \"progressbar\" } }, [\n      _c(\"li\", { staticClass: \"active complete clrbluu\" }, [\n        _vm._v(\"Property info\")\n      ]),\n      _c(\"li\", { staticClass: \"active complete clrdarc\" }, [\n        _vm._v(\"Account details\")\n      ]),\n      _c(\"li\", [_vm._v(\"Rent agreement\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"span\",\n      {\n        staticClass: \"file-msg js-set-number\",\n        staticStyle: { color: \"#808080\", \"font-size\": \"16px\" }\n      },\n      [\n        _vm._v(\"Click or Drop files \"),\n        _c(\"span\", { staticStyle: { color: \"#0071bc\" } }, [_vm._v(\"here\")])\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"label\",\n      { staticClass: \"radiolabel\", attrs: { for: \"option1\" } },\n      [_c(\"span\", [_c(\"span\")]), _vm._v(\"Yes\")]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"label\",\n      { staticClass: \"radiolabel\", attrs: { for: \"option2\" } },\n      [_c(\"span\", [_c(\"span\")]), _vm._v(\"No\")]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"div\",\n      { staticClass: \"row marzero0\", staticStyle: { \"margin-bottom\": \"20px\" } },\n      [\n        _c(\"div\", { staticClass: \"maxbtnwid \" }, [\n          _c(\"div\", { staticClass: \"col-xs-6\" }, [\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-info custbtnn\",\n                attrs: { type: \"submit\" }\n              },\n              [_vm._v(\"Save and Next\")]\n            )\n          ])\n        ])\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"mar0_15\" }, [\n      _c(\n        \"span\",\n        { staticClass: \"fonweigh700\", staticStyle: { float: \"right\" } },\n        [_c(\"a\", [_vm._v(\"X\")])]\n      ),\n      _c(\"h4\", { staticClass: \"fonweigh700\" }, [_vm._v(\"Create template\")]),\n      _c(\"hr\", { staticStyle: { \"border-color\": \"#EEEEEE\" } })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"ul\", { attrs: { id: \"progressbar\" } }, [\n      _c(\"li\", { staticClass: \"active complete clrbluu\" }, [\n        _vm._v(\"Property info\")\n      ]),\n      _c(\"li\", { staticClass: \"active complete clrdarc\" }, [\n        _vm._v(\"Account details\")\n      ]),\n      _c(\"li\", { staticClass: \"active complete clrdarc\" }, [\n        _vm._v(\"Rent agreement\")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"span\",\n      {\n        staticClass: \"file-msg js-set-number\",\n        staticStyle: { color: \"#808080\", \"font-size\": \"16px\" }\n      },\n      [\n        _vm._v(\"Click or Drop files \"),\n        _c(\"span\", { staticStyle: { color: \"#0071bc\" } }, [_vm._v(\"here\")])\n      ]\n    )\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"small\", [_c(\"p\", [_vm._v(\"File Uploaded \")])])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"div\",\n      { staticClass: \"row marzero0\", staticStyle: { \"margin-bottom\": \"20px\" } },\n      [\n        _c(\"div\", { staticClass: \"maxbtnwid\" }, [\n          _c(\"div\", { staticClass: \"col-xs-6\" }, [\n            _c(\n              \"button\",\n              {\n                staticClass: \"btn btn-info custbtnn\",\n                attrs: { type: \"submit\" }\n              },\n              [_vm._v(\"Finish\")]\n            )\n          ])\n        ])\n      ]\n    )\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}