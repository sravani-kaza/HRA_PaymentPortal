{"remainingRequest":"/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/node_modules/babel-loader/lib/index.js!/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/src/components/userdashboard/editform/editaccount.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/src/components/userdashboard/editform/editaccount.vue","mtime":1541835170092},{"path":"/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/node_modules/cache-loader/dist/cjs.js","mtime":1541837368340},{"path":"/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/akshaya/Documents/projects/HRA-frontend-app/all-usecases-till-now/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es7.symbol.async-iterator\";\nimport \"core-js/modules/es6.symbol\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es7.object.values\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport axios from 'axios';\nimport { localstore } from '../../../main.js';\nimport { Validator } from 'vee-validate';\n/* eslint-disable */\n\nvar dict = {\n  en: {\n    custom: {\n      Retypeaccountnumber: {\n        is: 'Does not match Account number'\n      }\n    }\n  }\n};\nexport default {\n  data: function data() {\n    return {\n      M_same_l: localstore.details.M_same,\n      imageUpload: 1,\n      filevalid: true,\n      filevalid_format: true,\n      file_change: 0,\n      property: {\n        user_id: localstore.details.user_id,\n        Landlord_name: localstore.details.Landlord_name,\n        Account_holder_name: localstore.details.Account_holder_name,\n        Bank_name: localstore.details.Bank_name,\n        IFSC: localstore.details.IFSC,\n        Account_number: localstore.details.Account_number,\n        retype_Account_number: localstore.details.Account_number,\n        Landlord_city: localstore.details.Landlord_city,\n        Landlord_state: localstore.details.Landlord_state,\n        Landlord_PAN_number: localstore.details.Landlord_PAN_number,\n        pan_doc: localstore.details.pan_doc,\n        pan_doc_name: localstore.details.pan_doc_name,\n        M_same: localstore.details.M_same,\n        M_Account_holder_name: localstore.details.M_Account_holder_name,\n        M_Bank_name: localstore.details.M_Bank_name,\n        M_IFSC: localstore.details.M_IFSC,\n        M_Account_number: localstore.details.M_Account_number,\n        M_retype_Account_number: localstore.details.M_Account_number\n      }\n    };\n  },\n  mounted: function mounted() {\n    localstore.user.user_id = JSON.stringify(localStorage.getItem('user_id'));\n    localstore.user.token = JSON.stringify(localStorage.getItem('token'));\n    localstore.user.name = JSON.stringify(localStorage.getItem('name'));\n    localstore.user.email = JSON.stringify(localStorage.getItem('email'));\n    localstore.user.mobile = JSON.stringify(localStorage.getItem('mobile'));\n    localstore.details.user_id = JSON.stringify(localStorage.getItem('user_id'));\n    localstore.details.token = JSON.stringify(localStorage.getItem('token'));\n  },\n  created: function created() {\n    var _this = this;\n\n    this.$validator.extend('matchIFSC', {\n      getMessage: function getMessage(field) {\n        return 'Incorrect IFSC';\n      },\n      validate: function validate(value) {\n        var ifsc_code = Object.values(localstore.IFSCcodes)[Object.keys(localstore.IFSCcodes).indexOf(_this.property.Bank_name)];\n\n        var f1 = ifsc_code == _this.property.IFSC.substring(0, 4).toUpperCase();\n\n        var f2 = _this.property.IFSC.length == 11;\n        return f1 == 1 && f2 == 1;\n      }\n    }), this.$validator.extend('x', {\n      getMessage: function getMessage(field) {\n        return 'Incorrect file format';\n      },\n      validate: function validate(value) {\n        var files = e.target.files || e.dataTransfer.files;\n        if (files[0].type != \"application/pdf\" && files[0].type != \"image/png\" && files[0].type != \"image/jpeg\") return 0;else return 1;\n      }\n    }), this.$validator.extend('y', {\n      getMessage: function getMessage(field) {\n        return 'Size limit exceeded';\n      },\n      validate: function validate(value) {\n        var files = e.target.files || e.dataTransfer.files;\n        if (files[0].size > 500 * 1024) return 0;else return 1;\n      }\n    }), this.$validator.extend('matchaccno', {\n      getMessage: function getMessage(field) {\n        return 'Incorrect account number';\n      },\n      validate: function validate(value) {\n        var f = 0;\n        var banks = Object.keys(localstore.acclength);\n\n        for (var _i = 0; _i < banks.length; _i++) {\n          var i = banks[_i];\n\n          if (i == _this.property.Bank_name) {\n            f = 1;\n            break;\n          }\n        }\n\n        if (f == 1) {\n          var accno = Object.values(localstore.acclength)[Object.keys(localstore.acclength).indexOf(_this.property.Bank_name)];\n          var l = _this.property.Account_number.length;\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = accno[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var j = _step.value;\n\n              if (l == j) {\n                return 1;\n              }\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    }), this.$validator.extend('M_matchIFSC', {\n      getMessage: function getMessage(field) {\n        return 'Incorrect IFSC';\n      },\n      validate: function validate(value) {\n        var ifsc_code = Object.values(localstore.IFSCcodes)[Object.keys(localstore.IFSCcodes).indexOf(_this.property.M_Bank_name)];\n\n        var f1 = ifsc_code == _this.property.M_IFSC.substring(0, 4).toUpperCase();\n\n        var f2 = _this.property.M_IFSC.length == 11;\n        return f1 == 1 && f2 == 1;\n      }\n    }), this.$validator.extend('M_matchaccno', {\n      getMessage: function getMessage(field) {\n        return 'Incorrect account number';\n      },\n      validate: function validate(value) {\n        var f = 0;\n        var banks = Object.keys(localstore.acclength);\n\n        for (var _i2 = 0; _i2 < banks.length; _i2++) {\n          var i = banks[_i2];\n\n          if (i == _this.property.M_Bank_name) {\n            f = 1;\n            break;\n          }\n        }\n\n        if (f == 1) {\n          var accno = Object.values(localstore.acclength)[Object.keys(localstore.acclength).indexOf(_this.property.M_Bank_name)];\n          var l = _this.property.M_Account_number.length;\n          var _iteratorNormalCompletion2 = true;\n          var _didIteratorError2 = false;\n          var _iteratorError2 = undefined;\n\n          try {\n            for (var _iterator2 = accno[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n              var j = _step2.value;\n\n              if (l == j) {\n                return 1;\n              }\n            }\n          } catch (err) {\n            _didIteratorError2 = true;\n            _iteratorError2 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n                _iterator2.return();\n              }\n            } finally {\n              if (_didIteratorError2) {\n                throw _iteratorError2;\n              }\n            }\n          }\n\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    }), this.$validator.extend('matchaccdig', {\n      getMessage: function getMessage(field) {\n        return 'Incorrect account number';\n      },\n      validate: function validate(value) {\n        var f = 0;\n        var banks = Object.keys(localstore.startdig);\n\n        for (var _i3 = 0; _i3 < banks.length; _i3++) {\n          var i = banks[_i3];\n\n          if (i == _this.property.Bank_name) {\n            f = 1;\n            break;\n          }\n        }\n\n        if (f == 1) {\n          var accno = Object.values(localstore.startdig)[Object.keys(localstore.startdig).indexOf(_this.property.Bank_name)];\n          var _iteratorNormalCompletion3 = true;\n          var _didIteratorError3 = false;\n          var _iteratorError3 = undefined;\n\n          try {\n            for (var _iterator3 = accno[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n              var j = _step3.value;\n              var l1 = j.toString();\n              var len = l1.length;\n\n              var l2 = _this.property.Account_number.substring(0, len);\n\n              if (l1 == l2) {\n                return 1;\n              }\n            }\n          } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion3 && _iterator3.return != null) {\n                _iterator3.return();\n              }\n            } finally {\n              if (_didIteratorError3) {\n                throw _iteratorError3;\n              }\n            }\n          }\n\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    }), this.$validator.extend('M_matchaccdig', {\n      getMessage: function getMessage(field) {\n        return 'Incorrect account number';\n      },\n      validate: function validate(value) {\n        var f = 0;\n        var banks = Object.keys(localstore.startdig);\n\n        for (var _i4 = 0; _i4 < banks.length; _i4++) {\n          var i = banks[_i4];\n\n          if (i == _this.property.M_Bank_name) {\n            f = 1;\n            break;\n          }\n        }\n\n        if (f == 1) {\n          var accno = Object.values(localstore.startdig)[Object.keys(localstore.startdig).indexOf(_this.property.M_Bank_name)];\n          var _iteratorNormalCompletion4 = true;\n          var _didIteratorError4 = false;\n          var _iteratorError4 = undefined;\n\n          try {\n            for (var _iterator4 = accno[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n              var j = _step4.value;\n              var l1 = j.toString();\n              var len = l1.length;\n\n              var l2 = _this.property.M_Account_number.substring(0, len);\n\n              if (l1 == l2) {\n                return 1;\n              }\n            }\n          } catch (err) {\n            _didIteratorError4 = true;\n            _iteratorError4 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion4 && _iterator4.return != null) {\n                _iterator4.return();\n              }\n            } finally {\n              if (_didIteratorError4) {\n                throw _iteratorError4;\n              }\n            }\n          }\n\n          return 0;\n        } else {\n          return 1;\n        }\n      }\n    });\n  },\n  methods: {\n    submit3: function submit3() {\n      localstore.details.M_same = 1;\n      this.property.M_same = 1;\n      this.M_same_l = 1;\n    },\n    submit4: function submit4() {\n      localstore.details.M_same = 0;\n      this.property.M_same = 0;\n      this.M_same_l = 0;\n    },\n    onFileChange: function onFileChange(e) {\n      this.imageUpload = 1;\n      this.file_change = 1;\n      var files = e.target.files || e.dataTransfer.files;\n      if (!files.length) return;\n      if (files[0].size > 500 * 1024) this.filevalid = false;else this.filevalid = true;\n      if (files[0].type != \"application/pdf\" && files[0].type != \"image/png\" && files[0].type != \"image/jpeg\") this.filevalid_format = false;else this.filevalid_format = true;\n      this.createImage(files[0]);\n      this.property.pan_doc_name = files[0];\n    },\n    createImage: function createImage(file) {\n      var _this2 = this;\n\n      var reader = new FileReader();\n\n      reader.onload = function (e) {\n        _this2.property.pan_doc = e.target.result;\n      };\n\n      reader.readAsDataURL(file);\n    },\n    sendData: function sendData() {\n      var _this3 = this;\n\n      var x = this.$el.querySelector('#form2'); //console.log(x)\n\n      var valid = true,\n          y = [],\n          z = [],\n          i = 0;\n      var self = this;\n      this.$validator.validate('Landlord name', this.property.Landlord_name);\n      this.$validator.validate('Account holder name', this.property.Account_holder_name);\n      this.$validator.validate('IFSC', this.property.IFSC);\n      this.$validator.validate('Account number', this.property.Account_number);\n      this.$validator.validate('Landlord city', this.property.Landlord_city);\n      this.$validator.validate('Landlord state', this.property.Landlord_state);\n      this.$validator.validate('Landlord PAN number', this.property.Landlord_PAN_number);\n\n      if (this.M_same_l == 0) {\n        this.$validator.validate('M_Account holder name', this.property.M_Account_holder_name);\n        this.$validator.validate('M_IFSC', this.property.M_IFSC);\n        this.$validator.validate('M_Account number', this.property.M_Account_number);\n      }\n\n      y = x.querySelectorAll('.step_2');\n      z = x.querySelectorAll('.step_4');\n\n      for (i = 0; i < y.length; i++) {\n        if (y[i].value == \"\" && y[i].name != \"Landlord PAN number\" || y[i].classList.contains('invalid')) {\n          valid = false;\n        }\n      }\n\n      if (this.M_same_l == 0) {\n        for (i = 0; i < z.length; i++) {\n          if (z[i].value == \"\" || z[i].classList.contains('invalid')) {\n            valid = false;\n          }\n        }\n      }\n\n      if (!valid || !this.filevalid || !this.filevalid_format) {\n        alert(\"Correct the errors\");\n        return false;\n      } else {\n        localstore.details.Landlord_name = this.property.Landlord_name;\n        localstore.details.Account_holder_name = this.property.Account_holder_name;\n        localstore.details.Bank_name = this.property.Bank_name;\n        localstore.details.IFSC = this.property.IFSC;\n        localstore.details.Account_number = this.property.Account_number;\n        localstore.details.Landlord_city = this.property.Landlord_city;\n        localstore.details.Landlord_state = this.property.Landlord_state;\n        localstore.details.Landlord_PAN_number = this.property.Landlord_PAN_number;\n        localstore.details.pan_doc = this.property.pan_doc;\n        localstore.details.pan_doc_name = this.property.pan_doc_name;\n        localstore.details.M_same = this.property.M_same;\n        localstore.details.M_Account_holder_name = this.property.M_Account_holder_name;\n        localstore.details.M_Bank_name = this.property.M_Bank_name;\n        localstore.details.M_IFSC = this.property.M_IFSC;\n        localstore.details.M_Account_number = this.property.M_Account_number;\n\n        if (this.M_same_l) {\n          //console.log('hello')\n          localstore.details.M_Account_holder_name = this.property.Account_holder_name;\n          localstore.details.M_Bank_name = this.property.Bank_name;\n          localstore.details.M_IFSC = this.property.IFSC;\n          localstore.details.M_Account_number = this.property.Account_number;\n        }\n\n        if (!this.file_change) {\n          this.property.pan_doc = '';\n          localstore.details.pan_doc = '';\n        }\n\n        console.log(JSON.stringify(this.property.pan_doc));\n        axios.put('http://127.0.0.1:8000/api/updatelandlord/' + localstore.details.landlord_id, this.property).then(function (response) {\n          console.log(JSON.stringify(_this3.property));\n          alert(response);\n          console.log(response);\n          if (response.data.status == \"SUCCESS\") self.$router.push('/propertydetails');\n        }).catch(function (error) {\n          return alert(error);\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["editaccount.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div>\n<div id=\"form2\">\n    <div class=\"mar0_15\">\n      <span class=\"fonweigh700\" style=\"float:right;\"><a><i class=\"fas fa-times\"></i></a></span>\n      <h4 class=\"fonweigh700\">Edit Account Details</h4>\n      <hr style=\"border-color:#EEEEEE;\">\n    </div>\n<div class=\"mainfomlayout\">\n    <div class=\"row\" style=\"margin-top:10px;font-family: 'Roboto', sans-serif;\">\n      <form @submit.prevent=\"sendData\">\n        <div class=\"hrafom1\">\n        <h4 style=\"margin: 0px 15px 20px;\">Landlord account details:</h4>\n        <div class=\"row marzero0\">\n            <div class=\"col-sm-6\">\n                <div class=\"form-group custrespformgrop\">\n                        <label class=\"lblcustm\" >Landlord name</label>\n                        <p>\n                          <input data-vv-validate-on=\"blur\" name=\"Landlord name\" v-model.trim=\"property.Landlord_name\" v-validate=\"{ required:true , regex:/^[A-z\\s\\-\\/]+$/ }\" type=\"text\" class=\"form-control step_2\" :class=\"{'invalid': errors.has('Landlord name')}\">\n                          <span class=\"errormsg\" v-show=\"errors.has('Landlord name')\">{{ errors.first('Landlord name') }}</span>\n                        </p>\n                </div>\n            </div>\n            <div class=\"col-sm-6\">\n                <div class=\"form-group custrespformgrop\">\n                        <label class=\"lblcustm\" >Account holder name</label>\n                        <p>\n                          <input data-vv-validate-on=\"blur\" name=\"Account holder name\" v-model.trim=\"property.Account_holder_name\" v-validate=\"{ required:true , regex:/^[A-z\\s]+$/ }\" type=\"text\" class=\"form-control step_2\" :class=\"{'invalid': errors.has('Account holder name')}\">\n                          <span class=\"errormsg\" v-show=\"errors.has('Account holder name')\">{{ errors.first('Account holder name') }}</span>\n                        </p>\n                    </div>\n            </div>\n        </div>\n        <div class=\"row marzero0\">\n            <div class=\"col-sm-6\">\n                <div class=\"form-group custrespformgrop\">\n                        <label class=\"lblcustm\" >Bank name</label>\n                        <select name=\"Bank name\" class=\"form-control step_2\" id=\"sel1\" v-model.trim=\"property.Bank_name\" :class=\"{'invalid': errors.has('Bank name')}\" required>\n                          <option>Allahabad Bank</option>\n                          <option>Andhra Bank</option>\n                          <option>Axis Bank</option>\n                          <option>Bank of Baroda</option>\n                          <option>Bank of India</option>\n                          <option>Bank of Maharashtra</option>\n                          <option>Bank of Punjab</option>\n                          <option>Bank of Rajasthan</option>\n                          <option>BNP Paribas</option>\n                          <option>Canara Bank\"</option>\n                          <option>Central Bank of India</option>\n                          <option>Centurion Ban</option>\n                          <option>Corporation Bank</option>\n                          <option>Citi Bank</option>\n                          <option>City Union Bank</option>\n                          <option>Catholic Syrian Bank</option>\n                          <option>DCB Bank</option>\n                          <option>Development Credit Bank</option>\n                          <option>Deutsche Bank AG</option>\n                          <option>Dhanlakshmi Bank</option>\n                          <option>Dena Bank</option>\n                          <option>Federal Bank</option>\n                          <option>HDFC Bank</option>\n                          <option>HSBC Bank</option>\n                          <option>ICICI Bank</option>\n                          <option>IDBI Bank</option>\n                          <option>Indian Bank</option>\n                          <option>Indian Overseas Bank</option>\n                          <option>IndusInd Bank</option>\n                          <option>ING Vysya Bank</option>\n                          <option>Jammu &amp; Kashmir Bank</option>\n                          <option>Karnataka Bank</option>\n                          <option>Kotak Mahindra Bank</option>\n                          <option>Karur Vysya Bank</option>\n                          <option>Lakshmi Vilas Bank</option>\n                          <option>NKGSB Co-operative Bank Ltd</option>\n                          <option>Oriental Bank of Commerce</option>\n                          <option>PunjabSind Bank</option>\n                          <option>Punjab National Bank</option>\n                          <option>Standard Chartered Bank</option>\n                          <option>State Bank of India</option>\n                          <option>State Bank of Indore</option>\n                          <option>State Bank of Mysore</option>\n                          <option>State Bank of Patiala</option>\n                          <option>State Bank of Travancore</option>\n                          <option>State Bank of Bikaner and Jaipur</option>\n                          <option>State Bank of Hyderabad</option>\n                          <option>State Bank of Saurashtra</option>\n                          <option>South Indian Bank</option>\n                          <option>Syndicate Bank</option>\n                          <option>UCO Bank</option>\n                          <option>UTI Bank</option>\n                          <option>Union Bank of India</option>\n                          <option>United Bank of India</option>\n                          <option>United Western Bank</option>\n                          <option>Vijaya Bank</option>\n                          <option>Yes Bank</option>\n                        </select>\n                </div>\n            </div>\n            <div class=\"col-sm-6\">\n                <div class=\"form-group custrespformgrop\">\n                        <label class=\"lblcustm\" >IFSC </label>\n                        <p>\n                          <input data-vv-validate-on=\"blur\" name=\"IFSC\" v-model.trim=\"property.IFSC\" v-validate=\"'required|matchIFSC'\" type=\"text\" class=\"form-control step_2\" :class=\"{'invalid':errors.has('IFSC')}\">\n                          <span class=\"errormsg\" v-show=\"errors.has('IFSC')\">{{ errors.first('IFSC') }}</span>\n                        </p>\n                    </div>\n            </div>\n        </div>\n        <div class=\"row marzero0\">\n            <div class=\"col-sm-6\">\n                <div class=\"form-group custrespformgrop\">\n                        <label class=\"lblcustm\" >Account number</label>\n                        <p>\n                          <input data-vv-validate-on=\"blur\" name=\"Account number\" v-model.trim=\"property.Account_number\" v-validate=\"'required|numeric|matchaccno|matchaccdig'\" type=\"text\" class=\"form-control step_2\" :class=\"{'invalid': errors.has('Account number')}\">\n                          <span class=\"errormsg\" v-show=\"errors.has('Account number')\">{{ errors.first('Account number') }}</span>\n                        </p>\n                </div>\n            </div>\n            <div class=\"col-sm-6\">\n                <div class=\"form-group custrespformgrop\">\n                        <label class=\"lblcustm\" >Retype account number</label>\n                        <p>\n                          <input data-vv-validate-on=\"blur\" v-model.trim=\"property.retype_Account_number\" name=\"Retypeaccountnumber\" v-validate=\"{ required:true , is: property.Account_number }\" type=\"text\" class=\"form-control step_2\" :class=\"{'invalid': errors.has('Retypeaccountnumber')}\">\n                          <span class=\"errormsg\" v-show=\"errors.has('Retypeaccountnumber')\">{{ errors.first('Retypeaccountnumber') }}</span>\n                        </p>\n                    </div>\n            </div>\n        </div>\n        <div class=\"row marzero0\">\n            <div class=\"col-sm-6\">\n                <div class=\"form-group custrespformgrop\">\n                        <label class=\"lblcustm\" >Landlord city</label>\n                        <p>\n                          <input data-vv-validate-on=\"blur\" name=\"Landlord city\" v-model.trim=\"property.Landlord_city\" v-validate=\"{ required:true , regex:/^[A-z0-9\\s\\-\\/]+$/ }\" type=\"text\" class=\"form-control step_2\" :class=\"{'invalid': errors.has('Landlord city')}\">\n                          <span class=\"errormsg\" v-show=\"errors.has('Landlord city')\">{{ errors.first('Landlord city') }}</span>\n                        </p>\n                </div>\n            </div>\n            <div class=\"col-sm-6\">\n                <div class=\"form-group custrespformgrop\">\n                        <label class=\"lblcustm\" >Landlord state</label>\n                        <p>\n                          <input data-vv-validate-on=\"blur\" name=\"Landlord state\" v-model.trim=\"property.Landlord_state\"\n                          v-validate=\"{ required:true , regex:/^[A-z0-9\\s\\-\\/]+$/ }\" type=\"text\" class=\"form-control step_2\" :class=\"{'invalid': errors.has('Landlord state')}\">\n                          <span class=\"errormsg\" v-show=\"errors.has('Landlord state')\">{{ errors.first('Landlord state') }}</span>\n                        </p>\n                    </div>\n            </div>\n        </div>\n        <div class=\"row marzero0\">\n            <div class=\"col-sm-6\">\n                <div class=\"form-group custrespformgrop\">\n                        <label class=\"lblcustm\" >Landlord PAN number</label>\n                        <p>\n                          <input data-vv-validate-on=\"blur\" name=\"Landlord PAN number\" v-model.trim=\"property.Landlord_PAN_number\" v-validate=\"{ regex:/[A-Z]{5}[0-9]{4}[A-Z]{1}/ }\" type=\"text\" class=\"form-control step_2\" :class=\"{'invalid': errors.has('Landlord PAN number')}\">\n                          <span class=\"errormsg\" v-show=\"errors.has('Landlord PAN number')\">{{ errors.first('Landlord PAN number') }}</span>\n                        </p>\n                </div>\n            </div>\n        </div>\n        <div class=\"row marzero0\">\n            <div class=\"col-sm-6\">\n                <div class=\"form-group custrespformgrop\">\n                        <label class=\"lblcustm\" >Upload landlord PAN</label>\n                        <div class=\"file-drop-area\">\n                            <!-- <span class=\"fake-btn\">Choose files</span> -->\n                            <span class=\"file-msg js-set-number\" style=\"color:#808080;font-size:16px\">Click or Drop files <span style=\"color:#0071bc;\">here</span></span>\n                            <input class=\"file-input\" type=\"file\" name=\"property.pan_doc_name\" v-on:change=\"onFileChange\" >\n\n                        </div>\n                        <div v-show=\"imageUpload===1\"> <small><p>File Uploaded </p></small> </div>\n                        <div class=\"errormsg\" v-show=\"filevalid==false\"><b>File uploaded has exceeded size limit </b></div>\n                        <div class=\"errormsg\" v-show=\"filevalid_format==false\"><b>File uploaded is not of the format jpg/png/pdf/jpeg</b></div>\n                        <small>jpg/png/pdf files with a size less than 500kb</small>\n                </div>\n            </div>\n        </div>\n        <div class=\"row marzero0\">\n            <label class=\"lblcustm\" style=\"margin:0px 15px;\" >Maintenance Account Details:</label>\n            <div class=\"col-sm-12\">\n                <div class=\"form-group custrespformgrop\">\n                        <label class=\"lblcustm\" >Same as landlord account details?</label>\n                        <input type=\"radio\" id=\"option1\" name=\"fooBar\" v-model=\"property.M_same\" value=\"1\" v-on:change=\"submit3\">\n                        <label class=\"radiolabel\" for=\"option1\"><span><span></span></span>Yes</label>\n\n                        <input type=\"radio\" id=\"option2\" name=\"fooBar\" v-model=\"property.M_same\" value=\"0\" v-on:change=\"submit4\">\n                        <label class=\"radiolabel\" for=\"option2\"><span><span></span></span>No</label>\n                </div>\n            </div>\n        </div>\n        <div v-show=\"M_same_l==0\">\n              <div class=\"col-sm-6\">\n                  <div class=\"form-group custrespformgrop\">\n                          <label class=\"lblcustm\" >Account holder name</label>\n                          <p>\n                            <input data-vv-validate-on=\"blur\" name=\"M_Account holder name\" v-model.trim=\"property.M_Account_holder_name\" v-validate=\"{ required:true , regex:/^[A-z\\s]+$/ }\" type=\"text\" class=\"form-control step_4\" :class=\"{'invalid': errors.has('M_Account holder name')}\">\n                            <span class=\"errormsg\" v-show=\"errors.has('M_Account holder name')\">{{ errors.first('M_Account holder name') }}</span>\n                          </p>\n                      </div>\n              </div>\n          <div class=\"row marzero0\">\n              <div class=\"col-sm-6\">\n                  <div class=\"form-group custrespformgrop\">\n                          <label class=\"lblcustm\" >Bank name</label>\n                          <select name=\"M_Bank name\" class=\"form-control step_4\" id=\"sel1\" v-model.trim=\"property.M_Bank_name\" :class=\"{'invalid': errors.has('M_Bank name')}\">\n                            <option>Allahabad Bank</option>\n                            <option>Andhra Bank</option>\n                            <option>Axis Bank</option>\n                            <option>Bank of Baroda</option>\n                            <option>Bank of India</option>\n                            <option>Bank of Maharashtra</option>\n                            <option>Bank of Punjab</option>\n                            <option>Bank of Rajasthan</option>\n                            <option>BNP Paribas</option>\n                            <option>Canara Bank\"</option>\n                            <option>Central Bank of India</option>\n                            <option>Centurion Ban</option>\n                            <option>Corporation Bank</option>\n                            <option>Citi Bank</option>\n                            <option>City Union Bank</option>\n                            <option>Catholic Syrian Bank</option>\n                            <option>DCB Bank</option>\n                            <option>Development Credit Bank</option>\n                            <option>Deutsche Bank AG</option>\n                            <option>Dhanlakshmi Bank</option>\n                            <option>Dena Bank</option>\n                            <option>Federal Bank</option>\n                            <option>HDFC Bank</option>\n                            <option>HSBC Bank</option>\n                            <option>ICICI Bank</option>\n                            <option>IDBI Bank</option>\n                            <option>Indian Bank</option>\n                            <option>Indian Overseas Bank</option>\n                            <option>IndusInd Bank</option>\n                            <option>ING Vysya Bank</option>\n                            <option>Jammu &amp; Kashmir Bank</option>\n                            <option>Karnataka Bank</option>\n                            <option>Kotak Mahindra Bank</option>\n                            <option>Karur Vysya Bank</option>\n                            <option>Lakshmi Vilas Bank</option>\n                            <option>NKGSB Co-operative Bank Ltd</option>\n                            <option>Oriental Bank of Commerce</option>\n                            <option>PunjabSind Bank</option>\n                            <option>Punjab National Bank</option>\n                            <option>Standard Chartered Bank</option>\n                            <option>State Bank of India</option>\n                            <option>State Bank of Indore</option>\n                            <option>State Bank of Mysore</option>\n                            <option>State Bank of Patiala</option>\n                            <option>State Bank of Travancore</option>\n                            <option>State Bank of Bikaner and Jaipur</option>\n                            <option>State Bank of Hyderabad</option>\n                            <option>State Bank of Saurashtra</option>\n                            <option>South Indian Bank</option>\n                            <option>Syndicate Bank</option>\n                            <option>UCO Bank</option>\n                            <option>UTI Bank</option>\n                            <option>Union Bank of India</option>\n                            <option>United Bank of India</option>\n                            <option>United Western Bank</option>\n                            <option>Vijaya Bank</option>\n                            <option>Yes Bank</option>\n                          </select>\n                  </div>\n              </div>\n              <div class=\"col-sm-6\">\n                  <div class=\"form-group custrespformgrop\">\n                          <label class=\"lblcustm\" >IFSC </label>\n                          <p>\n                            <input data-vv-validate-on=\"blur\" name=\"M_IFSC\" v-model.trim=\"property.M_IFSC\" v-validate=\"'required|M_matchIFSC'\" type=\"text\" class=\"form-control step_4\" :class=\"{'invalid':errors.has('M_IFSC')}\">\n                            <span class=\"errormsg\" v-show=\"errors.has('M_IFSC')\">{{ errors.first('M_IFSC') }}</span>\n                          </p>\n                      </div>\n              </div>\n          </div>\n          <div class=\"row marzero0\">\n              <div class=\"col-sm-6\">\n                  <div class=\"form-group custrespformgrop\">\n                          <label class=\"lblcustm\" >Account number</label>\n                          <p>\n                            <input data-vv-validate-on=\"blur\" name=\"M_Account number\" v-model.trim=\"property.M_Account_number\" v-validate=\"'required|numeric|M_matchaccno|M_matchaccdig'\" type=\"text\" class=\"form-control step_4\" :class=\"{'invalid': errors.has('M_Account number')}\">\n                            <span class=\"errormsg\" v-show=\"errors.has('M_Account number')\">{{ errors.first('M_Account number') }}</span>\n                          </p>\n                  </div>\n              </div>\n              <div class=\"col-sm-6\">\n                  <div class=\"form-group custrespformgrop\">\n                          <label class=\"lblcustm\" >Retype account number</label>\n                          <p>\n                            <input data-vv-validate-on=\"blur\" v-model.trim=\"property.M_retype_Account_number\" name=\"M_Retypeaccountnumber\" v-validate=\"{ required:true , is: property.M_Account_number }\" type=\"text\" class=\"form-control step_4\" :class=\"{'invalid': errors.has('M_Retypeaccountnumber')}\">\n                            <span class=\"errormsg\" v-show=\"errors.has('M_Retypeaccountnumber')\">{{ errors.first('M_Retypeaccountnumber') }}</span>\n                          </p>\n                      </div>\n              </div>\n          </div>\n\n        </div>\n        <div class=\"row marzero0\" style=\"margin-bottom:20px;\">\n            <div class=\"maxbtnwid pull-right\">\n            <div class=\"col-xs-6\"><button type=\"submit\" class=\"btn btn-info custbtnn\">Update</button></div>\n            <router-link class=\"link\" :to=\"{ name: 'propertydetails' }\"><div class=\"col-xs-6\"><button type=\"button\" class=\"btn btn-info custbtnn2\">Cancel</button></div></router-link>\n            </div>\n        </div>\n    </div>\n    </form>\n    </div>\n     <hr style=\"border-color:#EEEEEE;\">\n    <p style=\"font-size:12px;color:#B0BEC5;text-align:center;\">© Copyright 2015-2018 Paymatrix. All Rights Reserved.</p>\n</div>\n</div>\n</div>\n</template>\n\n<script>\nimport axios from 'axios'\nimport {localstore} from '../../../main.js'\nimport {Validator} from 'vee-validate'\n\n/* eslint-disable */\n\n  const dict = {\n    en: {\n      custom: {\n        Retypeaccountnumber: {\n          is: 'Does not match Account number'\n        }\n}\n}\n};\n\n\nexport default {\n    data(){\n      return {\n        M_same_l:localstore.details.M_same,\n        imageUpload:1,\n        filevalid:true,\n        filevalid_format:true,\n        file_change:0,\n        property:{\n          user_id:localstore.details.user_id,\n          Landlord_name : localstore.details.Landlord_name,\n          Account_holder_name : localstore.details.Account_holder_name,\n          Bank_name : localstore.details.Bank_name,\n          IFSC : localstore.details.IFSC,\n          Account_number : localstore.details.Account_number,\n          retype_Account_number : localstore.details.Account_number,\n          Landlord_city : localstore.details.Landlord_city,\n          Landlord_state : localstore.details.Landlord_state,\n          Landlord_PAN_number : localstore.details.Landlord_PAN_number,\n          pan_doc : localstore.details.pan_doc,\n          pan_doc_name : localstore.details.pan_doc_name,\n          M_same:localstore.details.M_same,\n          M_Account_holder_name:localstore.details.M_Account_holder_name,\n          M_Bank_name:localstore.details.M_Bank_name,\n          M_IFSC:localstore.details.M_IFSC,\n          M_Account_number:localstore.details.M_Account_number,\n          M_retype_Account_number:localstore.details.M_Account_number\n        },\n\n\n     };\n    },\n    mounted(){\n      localstore.user.user_id = JSON.stringify(localStorage.getItem('user_id'));\n      localstore.user.token = JSON.stringify(localStorage.getItem('token'));\n      localstore.user.name = JSON.stringify(localStorage.getItem('name'));\n      localstore.user.email = JSON.stringify(localStorage.getItem('email'));\n      localstore.user.mobile = JSON.stringify(localStorage.getItem('mobile'));\n      localstore.details.user_id = JSON.stringify(localStorage.getItem('user_id'));\n      localstore.details.token = JSON.stringify(localStorage.getItem('token'));\n    },\n    created(){\n      this.$validator.extend('matchIFSC',{\n        getMessage: field => 'Incorrect IFSC',\n        validate: value => {\n          let ifsc_code = Object.values(localstore.IFSCcodes)[Object.keys(localstore.IFSCcodes).indexOf(this.property.Bank_name)];\n          let f1 = ifsc_code == this.property.IFSC.substring(0,4).toUpperCase();\n          let f2 = this.property.IFSC.length == 11;\n          return (f1 == 1) && (f2 == 1)\n        }\n      }),\n      this.$validator.extend('x',{\n        getMessage: field => 'Incorrect file format',\n        validate: value => {\n          let files = e.target.files || e.dataTransfer.files;\n         if(files[0].type!=\"application/pdf\" && files[0].type!=\"image/png\" && files[0].type!=\"image/jpeg\")\n           return 0;\n         else\n           return 1;\n        }\n      }),\n      this.$validator.extend('y',{\n        getMessage: field => 'Size limit exceeded',\n        validate: value => {\n          let files = e.target.files || e.dataTransfer.files;\n            if(files[0].size > 500 * 1024)\n              return 0;\n            else\n              return 1;\n        }\n      }),\n      this.$validator.extend('matchaccno',{\n        getMessage: field => 'Incorrect account number',\n        validate: value => {\n          let f = 0;\n          let banks = Object.keys(localstore.acclength);\n          for(var i of banks)\n          {\n            if(i == this.property.Bank_name)\n            {\n              f = 1;\n              break;\n            }\n          }\n\n          if(f == 1)\n          {\n            let accno = Object.values(localstore.acclength)[Object.keys(localstore.acclength).indexOf(this.property.Bank_name)];\n            let l = this.property.Account_number.length;\n            for(var j of accno)\n            {\n              if(l == j)\n              {\n                return 1\n              }\n            }\n            return 0;\n          }\n          else {\n            return 1;\n          }\n        }\n      }),\n      this.$validator.extend('M_matchIFSC',{\n        getMessage: field => 'Incorrect IFSC',\n        validate: value => {\n          let ifsc_code = Object.values(localstore.IFSCcodes)[Object.keys(localstore.IFSCcodes).indexOf(this.property.M_Bank_name)];\n          let f1 = ifsc_code == this.property.M_IFSC.substring(0,4).toUpperCase();\n          let f2 = this.property.M_IFSC.length == 11;\n          return (f1 == 1) && (f2 == 1)\n        }\n      }),\n      this.$validator.extend('M_matchaccno',{\n        getMessage: field => 'Incorrect account number',\n        validate: value => {\n          let f = 0;\n          let banks = Object.keys(localstore.acclength);\n          for(var i of banks)\n          {\n            if(i == this.property.M_Bank_name)\n            {\n              f = 1;\n              break;\n            }\n          }\n\n          if(f == 1)\n          {\n            let accno = Object.values(localstore.acclength)[Object.keys(localstore.acclength).indexOf(this.property.M_Bank_name)];\n            let l = this.property.M_Account_number.length;\n            for(var j of accno)\n            {\n              if(l == j)\n              {\n                return 1\n              }\n            }\n            return 0;\n          }\n          else {\n            return 1;\n          }\n        }\n      }),\n      this.$validator.extend('matchaccdig',{\n        getMessage: field => 'Incorrect account number',\n        validate: value => {\n          let f = 0;\n          let banks = Object.keys(localstore.startdig);\n          for(var i of banks)\n          {\n            if(i == this.property.Bank_name)\n            {\n              f = 1;\n              break;\n            }\n          }\n\n          if(f == 1)\n          {\n            let accno = Object.values(localstore.startdig)[Object.keys(localstore.startdig).indexOf(this.property.Bank_name)];\n\n            for(var j of accno)\n            {\n              let l1 = j.toString();\n              let len = l1.length;\n              let l2 = this.property.Account_number.substring(0,len);\n\n              if(l1 == l2)\n              {\n                return 1\n              }\n            }\n            return 0;\n          }\n          else {\n            return 1;\n          }\n        }\n      }),\n      this.$validator.extend('M_matchaccdig',{\n        getMessage: field => 'Incorrect account number',\n        validate: value => {\n          let f = 0;\n          let banks = Object.keys(localstore.startdig);\n          for(var i of banks)\n          {\n            if(i == this.property.M_Bank_name)\n            {\n              f = 1;\n              break;\n            }\n          }\n\n          if(f == 1)\n          {\n            let accno = Object.values(localstore.startdig)[Object.keys(localstore.startdig).indexOf(this.property.M_Bank_name)];\n\n            for(var j of accno)\n            {\n              let l1 = j.toString();\n              let len = l1.length;\n              let l2 = this.property.M_Account_number.substring(0,len);\n\n              if(l1 == l2)\n              {\n                return 1\n              }\n            }\n            return 0;\n          }\n          else {\n            return 1;\n          }\n        }\n      })\n\n    },\n    methods: {\n      submit3(){\n        localstore.details.M_same=1;\n        this.property.M_same=1;\n        this.M_same_l=1;\n      },\n      submit4(){\n        localstore.details.M_same=0;\n        this.property.M_same=0;\n        this.M_same_l=0;\n      },\n      onFileChange(e) {\n        this.imageUpload=1;\n        this.file_change=1;\n            let files = e.target.files || e.dataTransfer.files;\n              if (!files.length)\n                    return;\n              if(files[0].size > 500 * 1024)\n                this.filevalid=false;\n              else\n                this.filevalid=true;\n              if(files[0].type!=\"application/pdf\" && files[0].type!=\"image/png\" && files[0].type!=\"image/jpeg\")\n                this.filevalid_format=false;\n              else\n                this.filevalid_format=true;\n              this.createImage(files[0]);\n              this.property.pan_doc_name=files[0];\n          },\n          createImage(file) {\n            let reader = new FileReader();\n            reader.onload = (e) => {\n                this.property.pan_doc = e.target.result;\n            };\n            reader.readAsDataURL(file);\n          },\n          sendData() {\n            var x = this.$el.querySelector('#form2');\n            //console.log(x)\n\n            var valid = true, y=[],z=[], i=0;\n            var self = this;\n\n            this.$validator.validate('Landlord name', this.property.Landlord_name);\n            this.$validator.validate('Account holder name', this.property.Account_holder_name);\n            this.$validator.validate('IFSC', this.property.IFSC);\n            this.$validator.validate('Account number', this.property.Account_number);\n            this.$validator.validate('Landlord city', this.property.Landlord_city);\n            this.$validator.validate('Landlord state', this.property.Landlord_state);\n            this.$validator.validate('Landlord PAN number', this.property.Landlord_PAN_number);\n            if(this.M_same_l == 0){\n              this.$validator.validate('M_Account holder name', this.property.M_Account_holder_name);\n              this.$validator.validate('M_IFSC', this.property.M_IFSC);\n              this.$validator.validate('M_Account number', this.property.M_Account_number);\n            }\n\n            y = x.querySelectorAll('.step_2');\n            z = x.querySelectorAll('.step_4');\n\n            for(i=0; i<y.length;i++){\n            if((y[i].value == \"\" && y[i].name != \"Landlord PAN number\") || y[i].classList.contains('invalid')){\n             valid = false;\n            }\n            }\n\n            if(this.M_same_l == 0){\n            for(i=0; i<z.length;i++){\n            if(z[i].value == \"\" || z[i].classList.contains('invalid')){\n             valid = false;\n            }\n            }\n          }\n\n            if(!valid || !this.filevalid || !this.filevalid_format){\n               alert(\"Correct the errors\");\n            return false;\n            }else{\n              localstore.details.Landlord_name=this.property.Landlord_name;\n              localstore.details.Account_holder_name=this.property.Account_holder_name;\n              localstore.details.Bank_name=this.property.Bank_name;\n              localstore.details.IFSC=this.property.IFSC;\n              localstore.details.Account_number=this.property.Account_number;\n              localstore.details.Landlord_city=this.property.Landlord_city;\n              localstore.details.Landlord_state=this.property.Landlord_state;\n              localstore.details.Landlord_PAN_number=this.property.Landlord_PAN_number;\n              localstore.details.pan_doc=this.property.pan_doc;\n              localstore.details.pan_doc_name=this.property.pan_doc_name;\n              localstore.details.M_same=this.property.M_same;\n              localstore.details.M_Account_holder_name=this.property.M_Account_holder_name;\n              localstore.details.M_Bank_name=this.property.M_Bank_name;\n              localstore.details.M_IFSC=this.property.M_IFSC;\n              localstore.details.M_Account_number=this.property.M_Account_number;\n\n              if(this.M_same_l)\n              {\n                //console.log('hello')\n                localstore.details.M_Account_holder_name=this.property.Account_holder_name;\n                localstore.details.M_Bank_name=this.property.Bank_name;\n                localstore.details.M_IFSC=this.property.IFSC;\n                localstore.details.M_Account_number=this.property.Account_number;\n              }\n              if(!this.file_change)\n              {\n                this.property.pan_doc='';\n                localstore.details.pan_doc=''\n              }\n              console.log(JSON.stringify(this.property.pan_doc));\n              axios.put('http://127.0.0.1:8000/api/updatelandlord/'+localstore.details.landlord_id,this.property)\n                  .then((response) => {\n                    console.log(JSON.stringify(this.property))\n                    alert(response);\n                    console.log(response);\n                    if(response.data.status==\"SUCCESS\")\n                      self.$router.push('/propertydetails');\n                  })\n                  .catch((error) => alert(error))\n\n            }\n          }\n    }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style>\ninput.invalid{\n  border: 1px solid red !important;\n}\n.errormsg {\n  color: red\n}\n</style>\n"],"sourceRoot":"src/components/userdashboard/editform"}]}